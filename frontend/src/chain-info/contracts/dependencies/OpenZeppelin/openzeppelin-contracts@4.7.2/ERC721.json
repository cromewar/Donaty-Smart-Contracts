{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/ERC721.sol",
    "17": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/IERC721.sol",
    "18": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/IERC721Receiver.sol",
    "20": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "22": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/Address.sol",
    "24": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/Context.sol",
    "26": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/Strings.sol",
    "30": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/introspection/ERC165.sol",
    "31": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        7376
      ],
      "Context": [
        5392
      ],
      "ERC165": [
        8175
      ],
      "ERC721": [
        6259
      ],
      "IERC165": [
        6725
      ],
      "IERC721": [
        1830
      ],
      "IERC721Metadata": [
        11067
      ],
      "IERC721Receiver": [
        7081
      ],
      "Strings": [
        11293
      ]
    },
    "id": 6260,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5394,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:16"
      },
      {
        "absolutePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 5395,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6260,
        "sourceUnit": 1831,
        "src": "132:23:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 5396,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6260,
        "sourceUnit": 7082,
        "src": "156:31:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 5397,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6260,
        "sourceUnit": 11068,
        "src": "188:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 5398,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6260,
        "sourceUnit": 7377,
        "src": "231:33:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 5399,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6260,
        "sourceUnit": 5393,
        "src": "265:33:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 5400,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6260,
        "sourceUnit": 11294,
        "src": "299:33:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 5401,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6260,
        "sourceUnit": 8176,
        "src": "333:46:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5403,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5392,
              "src": "647:7:16"
            },
            "id": 5404,
            "nodeType": "InheritanceSpecifier",
            "src": "647:7:16"
          },
          {
            "baseName": {
              "id": 5405,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8175,
              "src": "656:6:16"
            },
            "id": 5406,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:16"
          },
          {
            "baseName": {
              "id": 5407,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1830,
              "src": "664:7:16"
            },
            "id": 5408,
            "nodeType": "InheritanceSpecifier",
            "src": "664:7:16"
          },
          {
            "baseName": {
              "id": 5409,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11067,
              "src": "673:15:16"
            },
            "id": 5410,
            "nodeType": "InheritanceSpecifier",
            "src": "673:15:16"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5402,
          "nodeType": "StructuredDocumentation",
          "src": "381:246:16",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 6259,
        "linearizedBaseContracts": [
          6259,
          11067,
          1830,
          8175,
          6725,
          5392
        ],
        "name": "ERC721",
        "nameLocation": "637:6:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 5413,
            "libraryName": {
              "id": 5411,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7376,
              "src": "701:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "695:26:16",
            "typeName": {
              "id": 5412,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 5416,
            "libraryName": {
              "id": 5414,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11293,
              "src": "732:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "726:26:16",
            "typeName": {
              "id": 5415,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 5418,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "791:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 6259,
            "src": "776:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5417,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5420,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "838:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 6259,
            "src": "823:22:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5419,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "823:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5424,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "934:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 6259,
            "src": "898:43:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 5423,
              "keyType": {
                "id": 5421,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "898:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 5422,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "917:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5428,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1028:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 6259,
            "src": "992:45:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5427,
              "keyType": {
                "id": 5425,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1000:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "992:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5426,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1011:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5432,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1129:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 6259,
            "src": "1093:51:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 5431,
              "keyType": {
                "id": 5429,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 5430,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1112:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5438,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1252:18:16",
            "nodeType": "VariableDeclaration",
            "scope": 6259,
            "src": "1199:71:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 5437,
              "keyType": {
                "id": 5433,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1207:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1199:44:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 5436,
                "keyType": {
                  "id": 5434,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1218:24:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 5435,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:4:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5454,
              "nodeType": "Block",
              "src": "1446:57:16",
              "statements": [
                {
                  "expression": {
                    "id": 5448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5446,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5418,
                      "src": "1456:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5447,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5441,
                      "src": "1464:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1456:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 5449,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:13:16"
                },
                {
                  "expression": {
                    "id": 5452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5450,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "1479:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5451,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5443,
                      "src": "1489:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1479:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 5453,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:17:16"
                }
              ]
            },
            "documentation": {
              "id": 5439,
              "nodeType": "StructuredDocumentation",
              "src": "1277:108:16",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 5455,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5441,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1416:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "1402:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5440,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5443,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1437:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "1423:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5442,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:44:16"
            },
            "returnParameters": {
              "id": 5445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:16"
            },
            "scope": 6259,
            "src": "1390:113:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6724,
              8174
            ],
            "body": {
              "id": 5485,
              "nodeType": "Block",
              "src": "1678:192:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 5478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 5471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5466,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5458,
                          "src": "1707:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5468,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1830,
                                "src": "1727:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1830_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1830_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 5467,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1722:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 5469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1830",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 5470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1722:25:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1707:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 5477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5472,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5458,
                          "src": "1763:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5474,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11067,
                                "src": "1783:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$11067_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$11067_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 5473,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1778:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 5475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1778:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$11067",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 5476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1778:33:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1763:48:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1707:104:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5481,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5458,
                          "src": "1851:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 5479,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1827:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$6259_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 5480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8174,
                        "src": "1827:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 5482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1827:36:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1707:156:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5465,
                  "id": 5484,
                  "nodeType": "Return",
                  "src": "1688:175:16"
                }
              ]
            },
            "documentation": {
              "id": 5456,
              "nodeType": "StructuredDocumentation",
              "src": "1509:56:16",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 5486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1579:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5462,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5460,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8175,
                  "src": "1646:6:16"
                },
                {
                  "id": 5461,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6725,
                  "src": "1654:7:16"
                }
              ],
              "src": "1637:25:16"
            },
            "parameters": {
              "id": 5459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5458,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1604:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5486,
                  "src": "1597:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5457,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:20:16"
            },
            "returnParameters": {
              "id": 5465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5464,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5486,
                  "src": "1672:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5463,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:6:16"
            },
            "scope": 6259,
            "src": "1570:300:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1755
            ],
            "body": {
              "id": 5509,
              "nodeType": "Block",
              "src": "2010:123:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5496,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "2028:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2045:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2037:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5497,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2037:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2028:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
                        "id": 5502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        },
                        "value": "ERC721: address zero is not a valid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        }
                      ],
                      "id": 5495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2020:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:73:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5504,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:73:16"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5505,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5428,
                      "src": "2110:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5507,
                    "indexExpression": {
                      "id": 5506,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5489,
                      "src": "2120:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2110:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5494,
                  "id": 5508,
                  "nodeType": "Return",
                  "src": "2103:23:16"
                }
              ]
            },
            "documentation": {
              "id": 5487,
              "nodeType": "StructuredDocumentation",
              "src": "1876:48:16",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 5510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1938:9:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5491,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1983:8:16"
            },
            "parameters": {
              "id": 5490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5489,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1956:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5510,
                  "src": "1948:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:15:16"
            },
            "returnParameters": {
              "id": 5494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5510,
                  "src": "2001:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2000:9:16"
            },
            "scope": 6259,
            "src": "1929:204:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1763
            ],
            "body": {
              "id": 5537,
              "nodeType": "Block",
              "src": "2271:137:16",
              "statements": [
                {
                  "assignments": [
                    5520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5520,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2289:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5537,
                      "src": "2281:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5519,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2281:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5524,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5521,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5424,
                      "src": "2297:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 5523,
                    "indexExpression": {
                      "id": 5522,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5513,
                      "src": "2305:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2297:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2281:32:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5526,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5520,
                          "src": "2331:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2348:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2340:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5527,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2340:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2340:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2331:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                        "id": 5532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2352:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        },
                        "value": "ERC721: invalid token ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        }
                      ],
                      "id": 5525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2323:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2323:56:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5534,
                  "nodeType": "ExpressionStatement",
                  "src": "2323:56:16"
                },
                {
                  "expression": {
                    "id": 5535,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5520,
                    "src": "2396:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5518,
                  "id": 5536,
                  "nodeType": "Return",
                  "src": "2389:12:16"
                }
              ]
            },
            "documentation": {
              "id": 5511,
              "nodeType": "StructuredDocumentation",
              "src": "2139:46:16",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 5538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2199:7:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5515,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2244:8:16"
            },
            "parameters": {
              "id": 5514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5513,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2215:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5538,
                  "src": "2207:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2206:17:16"
            },
            "returnParameters": {
              "id": 5518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5517,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5538,
                  "src": "2262:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2261:9:16"
            },
            "scope": 6259,
            "src": "2190:218:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11052
            ],
            "body": {
              "id": 5547,
              "nodeType": "Block",
              "src": "2539:29:16",
              "statements": [
                {
                  "expression": {
                    "id": 5545,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5418,
                    "src": "2556:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 5544,
                  "id": 5546,
                  "nodeType": "Return",
                  "src": "2549:12:16"
                }
              ]
            },
            "documentation": {
              "id": 5539,
              "nodeType": "StructuredDocumentation",
              "src": "2414:51:16",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 5548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2479:4:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5541,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2506:8:16"
            },
            "parameters": {
              "id": 5540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2483:2:16"
            },
            "returnParameters": {
              "id": 5544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5543,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5548,
                  "src": "2524:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5542,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2523:15:16"
            },
            "scope": 6259,
            "src": "2470:98:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11058
            ],
            "body": {
              "id": 5557,
              "nodeType": "Block",
              "src": "2703:31:16",
              "statements": [
                {
                  "expression": {
                    "id": 5555,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5420,
                    "src": "2720:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 5554,
                  "id": 5556,
                  "nodeType": "Return",
                  "src": "2713:14:16"
                }
              ]
            },
            "documentation": {
              "id": 5549,
              "nodeType": "StructuredDocumentation",
              "src": "2574:53:16",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 5558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2641:6:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5551,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2670:8:16"
            },
            "parameters": {
              "id": 5550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2647:2:16"
            },
            "returnParameters": {
              "id": 5554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5558,
                  "src": "2688:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:15:16"
            },
            "scope": 6259,
            "src": "2632:102:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11066
            ],
            "body": {
              "id": 5596,
              "nodeType": "Block",
              "src": "2888:188:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5568,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5561,
                        "src": "2913:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5567,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6174,
                      "src": "2898:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 5569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5570,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:23:16"
                },
                {
                  "assignments": [
                    5572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5572,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2946:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5596,
                      "src": "2932:21:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 5571,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2932:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5575,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5573,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5606,
                      "src": "2956:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 5574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2956:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2932:34:16"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5578,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5572,
                              "src": "2989:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 5577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2983:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 5576,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2983:5:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2983:14:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 5580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2983:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 5581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3007:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2983:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 5593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3067:2:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 5594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2983:86:16",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5587,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5572,
                              "src": "3035:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 5588,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5561,
                                  "src": "3044:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 5589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11155,
                                "src": "3044:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 5590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3044:18:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 5585,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3018:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 5586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3018:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 5591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3018:45:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 5584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3011:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 5583,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3011:6:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3011:53:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 5566,
                  "id": 5595,
                  "nodeType": "Return",
                  "src": "2976:93:16"
                }
              ]
            },
            "documentation": {
              "id": 5559,
              "nodeType": "StructuredDocumentation",
              "src": "2740:55:16",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 5597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2809:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2855:8:16"
            },
            "parameters": {
              "id": 5562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5561,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2826:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5597,
                  "src": "2818:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2817:17:16"
            },
            "returnParameters": {
              "id": 5566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5597,
                  "src": "2873:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5564,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2872:15:16"
            },
            "scope": 6259,
            "src": "2800:276:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5605,
              "nodeType": "Block",
              "src": "3384:26:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 5603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3401:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 5602,
                  "id": 5604,
                  "nodeType": "Return",
                  "src": "3394:9:16"
                }
              ]
            },
            "documentation": {
              "id": 5598,
              "nodeType": "StructuredDocumentation",
              "src": "3082:231:16",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
            },
            "id": 5606,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3327:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:2:16"
            },
            "returnParameters": {
              "id": 5602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5606,
                  "src": "3369:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5600,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3368:15:16"
            },
            "scope": 6259,
            "src": "3318:92:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1803
            ],
            "body": {
              "id": 5648,
              "nodeType": "Block",
              "src": "3537:337:16",
              "statements": [
                {
                  "assignments": [
                    5616
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5616,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3555:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5648,
                      "src": "3547:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5615,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3547:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5619,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5611,
                        "src": "3578:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5617,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6259,
                        "src": "3563:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$6259_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 5618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5538,
                      "src": "3563:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 5620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3547:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5623,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5609,
                          "src": "3604:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 5624,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5616,
                          "src": "3610:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3604:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 5626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3617:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 5622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3596:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3596:57:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5628,
                  "nodeType": "ExpressionStatement",
                  "src": "3596:57:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5630,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5382,
                              "src": "3685:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3685:12:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 5632,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5616,
                            "src": "3701:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3685:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 5635,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5616,
                              "src": "3727:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5636,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5382,
                                "src": "3734:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 5637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3734:12:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5634,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5702,
                            "src": "3710:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 5638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3710:37:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3685:62:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 5640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3761:64:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304",
                          "typeString": "literal_string \"ERC721: approve caller is not token owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not token owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304",
                          "typeString": "literal_string \"ERC721: approve caller is not token owner nor approved for all\""
                        }
                      ],
                      "id": 5629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3664:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3664:171:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5642,
                  "nodeType": "ExpressionStatement",
                  "src": "3664:171:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5644,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5609,
                        "src": "3855:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5645,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5611,
                        "src": "3859:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5643,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6128,
                      "src": "3846:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3846:21:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5647,
                  "nodeType": "ExpressionStatement",
                  "src": "3846:21:16"
                }
              ]
            },
            "documentation": {
              "id": 5607,
              "nodeType": "StructuredDocumentation",
              "src": "3416:46:16",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 5649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3476:7:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5613,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3528:8:16"
            },
            "parameters": {
              "id": 5612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5609,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3492:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5649,
                  "src": "3484:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3484:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5611,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3504:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5649,
                  "src": "3496:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3496:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3483:29:16"
            },
            "returnParameters": {
              "id": 5614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3537:0:16"
            },
            "scope": 6259,
            "src": "3467:407:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1819
            ],
            "body": {
              "id": 5666,
              "nodeType": "Block",
              "src": "4020:82:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5659,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5652,
                        "src": "4045:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5658,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6174,
                      "src": "4030:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 5660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5661,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:23:16"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5662,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5432,
                      "src": "4071:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 5664,
                    "indexExpression": {
                      "id": 5663,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5652,
                      "src": "4087:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4071:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5657,
                  "id": 5665,
                  "nodeType": "Return",
                  "src": "4064:31:16"
                }
              ]
            },
            "documentation": {
              "id": 5650,
              "nodeType": "StructuredDocumentation",
              "src": "3880:50:16",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 5667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3944:11:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5654,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3993:8:16"
            },
            "parameters": {
              "id": 5653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5652,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3964:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5667,
                  "src": "3956:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3956:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3955:17:16"
            },
            "returnParameters": {
              "id": 5657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5656,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5667,
                  "src": "4011:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4011:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4010:9:16"
            },
            "scope": 6259,
            "src": "3935:167:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1811
            ],
            "body": {
              "id": 5683,
              "nodeType": "Block",
              "src": "4253:69:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5677,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5382,
                          "src": "4282:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4282:12:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5679,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5670,
                        "src": "4296:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5680,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5672,
                        "src": "4306:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5676,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6160,
                      "src": "4263:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 5681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:52:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5682,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:52:16"
                }
              ]
            },
            "documentation": {
              "id": 5668,
              "nodeType": "StructuredDocumentation",
              "src": "4108:56:16",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 5684,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4178:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5674,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4244:8:16"
            },
            "parameters": {
              "id": 5673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5670,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4204:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5684,
                  "src": "4196:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4196:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5672,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4219:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5684,
                  "src": "4214:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5671,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4214:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4195:33:16"
            },
            "returnParameters": {
              "id": 5675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4253:0:16"
            },
            "scope": 6259,
            "src": "4169:153:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1829
            ],
            "body": {
              "id": 5701,
              "nodeType": "Block",
              "src": "4491:59:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 5695,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5438,
                        "src": "4508:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 5697,
                      "indexExpression": {
                        "id": 5696,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5687,
                        "src": "4527:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4508:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 5699,
                    "indexExpression": {
                      "id": 5698,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5689,
                      "src": "4534:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4508:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5694,
                  "id": 5700,
                  "nodeType": "Return",
                  "src": "4501:42:16"
                }
              ]
            },
            "documentation": {
              "id": 5685,
              "nodeType": "StructuredDocumentation",
              "src": "4328:55:16",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 5702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4397:16:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5691,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4467:8:16"
            },
            "parameters": {
              "id": 5690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5687,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4422:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5702,
                  "src": "4414:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4414:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5689,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4437:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5702,
                  "src": "4429:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4413:33:16"
            },
            "returnParameters": {
              "id": 5694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5693,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5702,
                  "src": "4485:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4485:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4484:6:16"
            },
            "scope": 6259,
            "src": "4388:162:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1795
            ],
            "body": {
              "id": 5728,
              "nodeType": "Block",
              "src": "4731:208:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5715,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5382,
                              "src": "4820:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4820:12:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5717,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5709,
                            "src": "4834:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5714,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5859,
                          "src": "4801:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 5718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4801:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
                        "id": 5719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4844:48:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b",
                          "typeString": "literal_string \"ERC721: caller is not token owner nor approved\""
                        },
                        "value": "ERC721: caller is not token owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b",
                          "typeString": "literal_string \"ERC721: caller is not token owner nor approved\""
                        }
                      ],
                      "id": 5713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4793:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5721,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:100:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5723,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5705,
                        "src": "4914:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5724,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5707,
                        "src": "4920:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5725,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5709,
                        "src": "4924:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5722,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6104,
                      "src": "4904:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4904:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5727,
                  "nodeType": "ExpressionStatement",
                  "src": "4904:28:16"
                }
              ]
            },
            "documentation": {
              "id": 5703,
              "nodeType": "StructuredDocumentation",
              "src": "4556:51:16",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 5729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4621:12:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5711,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4722:8:16"
            },
            "parameters": {
              "id": 5710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5705,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4651:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5729,
                  "src": "4643:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4643:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5707,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4673:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5729,
                  "src": "4665:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5709,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4693:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5729,
                  "src": "4685:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4633:73:16"
            },
            "returnParameters": {
              "id": 5712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4731:0:16"
            },
            "scope": 6259,
            "src": "4612:327:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1785
            ],
            "body": {
              "id": 5747,
              "nodeType": "Block",
              "src": "5128:56:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5741,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5732,
                        "src": "5155:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5742,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5734,
                        "src": "5161:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5743,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5736,
                        "src": "5165:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 5744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5174:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 5740,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5748,
                        5778
                      ],
                      "referencedDeclaration": 5778,
                      "src": "5138:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 5745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5138:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5746,
                  "nodeType": "ExpressionStatement",
                  "src": "5138:39:16"
                }
              ]
            },
            "documentation": {
              "id": 5730,
              "nodeType": "StructuredDocumentation",
              "src": "4945:55:16",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 5748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5014:16:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5738,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5119:8:16"
            },
            "parameters": {
              "id": 5737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5732,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5048:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5748,
                  "src": "5040:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5040:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5734,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5070:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5748,
                  "src": "5062:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5062:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5736,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5090:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5748,
                  "src": "5082:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5082:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5030:73:16"
            },
            "returnParameters": {
              "id": 5739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5128:0:16"
            },
            "scope": 6259,
            "src": "5005:179:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1775
            ],
            "body": {
              "id": 5777,
              "nodeType": "Block",
              "src": "5400:165:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5763,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5382,
                              "src": "5437:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5437:12:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5765,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5755,
                            "src": "5451:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5762,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5859,
                          "src": "5418:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 5766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5418:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
                        "id": 5767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5461:48:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b",
                          "typeString": "literal_string \"ERC721: caller is not token owner nor approved\""
                        },
                        "value": "ERC721: caller is not token owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b",
                          "typeString": "literal_string \"ERC721: caller is not token owner nor approved\""
                        }
                      ],
                      "id": 5761,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5410:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5410:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5769,
                  "nodeType": "ExpressionStatement",
                  "src": "5410:100:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5771,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5751,
                        "src": "5534:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5772,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5753,
                        "src": "5540:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5773,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5755,
                        "src": "5544:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5774,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5757,
                        "src": "5553:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5770,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5807,
                      "src": "5520:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 5775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5520:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5776,
                  "nodeType": "ExpressionStatement",
                  "src": "5520:38:16"
                }
              ]
            },
            "documentation": {
              "id": 5749,
              "nodeType": "StructuredDocumentation",
              "src": "5190:55:16",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 5778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5259:16:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5759,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5391:8:16"
            },
            "parameters": {
              "id": 5758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5751,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5293:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "5285:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5285:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5753,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5315:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "5307:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5755,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5335:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "5327:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5327:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5757,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5365:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "5352:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5756,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5352:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5275:100:16"
            },
            "returnParameters": {
              "id": 5760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5400:0:16"
            },
            "scope": 6259,
            "src": "5250:315:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5806,
              "nodeType": "Block",
              "src": "6566:165:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5791,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5781,
                        "src": "6586:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5792,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5783,
                        "src": "6592:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5793,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5785,
                        "src": "6596:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5790,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6104,
                      "src": "6576:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6576:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5795,
                  "nodeType": "ExpressionStatement",
                  "src": "6576:28:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5798,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5781,
                            "src": "6645:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5799,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5783,
                            "src": "6651:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5800,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5785,
                            "src": "6655:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5801,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5787,
                            "src": "6664:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5797,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6236,
                          "src": "6622:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 5802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6622:47:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 5803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6671:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 5796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6614:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6614:110:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5805,
                  "nodeType": "ExpressionStatement",
                  "src": "6614:110:16"
                }
              ]
            },
            "documentation": {
              "id": 5779,
              "nodeType": "StructuredDocumentation",
              "src": "5571:850:16",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 5807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6435:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5781,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6466:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5807,
                  "src": "6458:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5783,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6488:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5807,
                  "src": "6480:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6480:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5785,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6508:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5807,
                  "src": "6500:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5787,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6538:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5807,
                  "src": "6525:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6525:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6448:100:16"
            },
            "returnParameters": {
              "id": 5789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6566:0:16"
            },
            "scope": 6259,
            "src": "6426:305:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5824,
              "nodeType": "Block",
              "src": "7105:54:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 5815,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5424,
                        "src": "7122:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5817,
                      "indexExpression": {
                        "id": 5816,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5810,
                        "src": "7130:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7122:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 5820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7150:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 5819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7142:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5818,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7142:7:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7142:10:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7122:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5814,
                  "id": 5823,
                  "nodeType": "Return",
                  "src": "7115:37:16"
                }
              ]
            },
            "documentation": {
              "id": 5808,
              "nodeType": "StructuredDocumentation",
              "src": "6737:292:16",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 5825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7043:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5810,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7059:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5825,
                  "src": "7051:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7050:17:16"
            },
            "returnParameters": {
              "id": 5814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5825,
                  "src": "7099:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7099:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7098:6:16"
            },
            "scope": 6259,
            "src": "7034:125:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5858,
              "nodeType": "Block",
              "src": "7416:162:16",
              "statements": [
                {
                  "assignments": [
                    5836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5836,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7434:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 5858,
                      "src": "7426:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5835,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7426:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5841,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5839,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5830,
                        "src": "7457:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5837,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6259,
                        "src": "7442:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$6259_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 5838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5538,
                      "src": "7442:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 5840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7442:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7426:39:16"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 5844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5842,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5828,
                              "src": "7483:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 5843,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5836,
                              "src": "7494:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7483:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 5846,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5836,
                                "src": "7520:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 5847,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5828,
                                "src": "7527:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5845,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5702,
                              "src": "7503:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 5848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7503:32:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7483:52:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 5851,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5830,
                                "src": "7551:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5850,
                              "name": "getApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5667,
                              "src": "7539:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 5852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7539:20:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 5853,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5828,
                            "src": "7563:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7539:31:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7483:87:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 5856,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7482:89:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5834,
                  "id": 5857,
                  "nodeType": "Return",
                  "src": "7475:96:16"
                }
              ]
            },
            "documentation": {
              "id": 5826,
              "nodeType": "StructuredDocumentation",
              "src": "7165:147:16",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 5859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7326:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5828,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7353:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5859,
                  "src": "7345:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7345:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5830,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7370:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5859,
                  "src": "7362:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7362:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7344:34:16"
            },
            "returnParameters": {
              "id": 5834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5859,
                  "src": "7410:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7410:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7409:6:16"
            },
            "scope": 6259,
            "src": "7317:261:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5873,
              "nodeType": "Block",
              "src": "7973:43:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5868,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5862,
                        "src": "7993:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5869,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5864,
                        "src": "7997:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 5870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8006:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 5867,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5874,
                        5903
                      ],
                      "referencedDeclaration": 5903,
                      "src": "7983:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 5871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7983:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5872,
                  "nodeType": "ExpressionStatement",
                  "src": "7983:26:16"
                }
              ]
            },
            "documentation": {
              "id": 5860,
              "nodeType": "StructuredDocumentation",
              "src": "7584:319:16",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 5874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "7917:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5862,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7935:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "7927:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7927:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5864,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7947:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "7939:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7939:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7926:29:16"
            },
            "returnParameters": {
              "id": 5866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7973:0:16"
            },
            "scope": 6259,
            "src": "7908:108:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5902,
              "nodeType": "Block",
              "src": "8351:195:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5885,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5877,
                        "src": "8367:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5886,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5879,
                        "src": "8371:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5884,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5969,
                      "src": "8361:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8361:18:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5888,
                  "nodeType": "ExpressionStatement",
                  "src": "8361:18:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 5893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8441:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 5892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8433:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5891,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8433:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8433:10:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5895,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5877,
                            "src": "8445:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5896,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5879,
                            "src": "8449:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5897,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5881,
                            "src": "8458:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5890,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6236,
                          "src": "8410:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 5898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8410:53:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 5899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8477:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 5889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8389:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8389:150:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5901,
                  "nodeType": "ExpressionStatement",
                  "src": "8389:150:16"
                }
              ]
            },
            "documentation": {
              "id": 5875,
              "nodeType": "StructuredDocumentation",
              "src": "8022:210:16",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 5903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8246:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5877,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8273:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5903,
                  "src": "8265:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8265:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5879,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8293:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5903,
                  "src": "8285:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8285:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5881,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8323:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5903,
                  "src": "8310:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5880,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8310:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8255:78:16"
            },
            "returnParameters": {
              "id": 5883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8351:0:16"
            },
            "scope": 6259,
            "src": "8237:309:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5968,
              "nodeType": "Block",
              "src": "8929:366:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5912,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5906,
                          "src": "8947:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8961:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8953:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5913,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8953:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8953:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8947:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 5918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8965:34:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 5911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8939:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8939:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5920,
                  "nodeType": "ExpressionStatement",
                  "src": "8939:61:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9018:17:16",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 5923,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5908,
                              "src": "9027:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5922,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5825,
                            "src": "9019:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 5924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9019:16:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 5926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9037:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 5921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9010:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9010:58:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5928,
                  "nodeType": "ExpressionStatement",
                  "src": "9010:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9108:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9100:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5930,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9100:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9100:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5934,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5906,
                        "src": "9112:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5935,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
                        "src": "9116:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5929,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6247,
                      "src": "9079:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9079:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5937,
                  "nodeType": "ExpressionStatement",
                  "src": "9079:45:16"
                },
                {
                  "expression": {
                    "id": 5942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5938,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "9135:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5940,
                      "indexExpression": {
                        "id": 5939,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5906,
                        "src": "9145:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9135:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 5941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9152:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9135:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5943,
                  "nodeType": "ExpressionStatement",
                  "src": "9135:18:16"
                },
                {
                  "expression": {
                    "id": 5948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5944,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5424,
                        "src": "9163:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5946,
                      "indexExpression": {
                        "id": 5945,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
                        "src": "9171:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9163:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5947,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5906,
                      "src": "9182:2:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9163:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5949,
                  "nodeType": "ExpressionStatement",
                  "src": "9163:21:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9217:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9209:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5951,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9209:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9209:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5955,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5906,
                        "src": "9221:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5956,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
                        "src": "9225:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5950,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "9200:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9200:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5958,
                  "nodeType": "EmitStatement",
                  "src": "9195:38:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9272:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9264:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5960,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9264:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9264:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5964,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5906,
                        "src": "9276:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5965,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
                        "src": "9280:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5959,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6258,
                      "src": "9244:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9244:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5967,
                  "nodeType": "ExpressionStatement",
                  "src": "9244:44:16"
                }
              ]
            },
            "documentation": {
              "id": 5904,
              "nodeType": "StructuredDocumentation",
              "src": "8552:311:16",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 5969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8877:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5906,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8891:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5969,
                  "src": "8883:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8883:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5908,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8903:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5969,
                  "src": "8895:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8895:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8882:29:16"
            },
            "returnParameters": {
              "id": 5910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8929:0:16"
            },
            "scope": 6259,
            "src": "8868:427:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6028,
              "nodeType": "Block",
              "src": "9561:357:16",
              "statements": [
                {
                  "assignments": [
                    5976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5976,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9579:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 6028,
                      "src": "9571:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5975,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9571:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5981,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5979,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5972,
                        "src": "9602:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5977,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6259,
                        "src": "9587:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$6259_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 5978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5538,
                      "src": "9587:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 5980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9587:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9571:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5983,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5976,
                        "src": "9642:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9657:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9649:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5984,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9649:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9649:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5988,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5972,
                        "src": "9661:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5982,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6247,
                      "src": "9621:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9621:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5990,
                  "nodeType": "ExpressionStatement",
                  "src": "9621:48:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9724:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9716:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5992,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9716:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9716:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5996,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5972,
                        "src": "9728:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5991,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6128,
                      "src": "9707:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9707:29:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5998,
                  "nodeType": "ExpressionStatement",
                  "src": "9707:29:16"
                },
                {
                  "expression": {
                    "id": 6003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5999,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "9747:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6001,
                      "indexExpression": {
                        "id": 6000,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5976,
                        "src": "9757:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9747:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 6002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9767:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9747:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6004,
                  "nodeType": "ExpressionStatement",
                  "src": "9747:21:16"
                },
                {
                  "expression": {
                    "id": 6008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9778:23:16",
                    "subExpression": {
                      "baseExpression": {
                        "id": 6005,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5424,
                        "src": "9785:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 6007,
                      "indexExpression": {
                        "id": 6006,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5972,
                        "src": "9793:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9785:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6009,
                  "nodeType": "ExpressionStatement",
                  "src": "9778:23:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6011,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5976,
                        "src": "9826:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9841:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9833:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6012,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9833:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9833:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6016,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5972,
                        "src": "9845:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6010,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "9817:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9817:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6018,
                  "nodeType": "EmitStatement",
                  "src": "9812:41:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6020,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5976,
                        "src": "9884:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9899:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9891:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6021,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9891:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9891:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6025,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5972,
                        "src": "9903:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6019,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6258,
                      "src": "9864:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9864:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6027,
                  "nodeType": "ExpressionStatement",
                  "src": "9864:47:16"
                }
              ]
            },
            "documentation": {
              "id": 5970,
              "nodeType": "StructuredDocumentation",
              "src": "9301:206:16",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 6029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9521:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5972,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9535:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6029,
                  "src": "9527:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9527:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9526:17:16"
            },
            "returnParameters": {
              "id": 5974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9561:0:16"
            },
            "scope": 6259,
            "src": "9512:406:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6103,
              "nodeType": "Block",
              "src": "10351:496:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 6042,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6036,
                              "src": "10384:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6040,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6259,
                              "src": "10369:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$6259_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 6041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5538,
                            "src": "10369:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 6043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10369:23:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6044,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6032,
                          "src": "10396:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10369:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 6046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10402:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 6039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10361:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10361:81:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6048,
                  "nodeType": "ExpressionStatement",
                  "src": "10361:81:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6050,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6034,
                          "src": "10460:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10474:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10466:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6051,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10466:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10466:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10460:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 6056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10478:38:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 6049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10452:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10452:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6058,
                  "nodeType": "ExpressionStatement",
                  "src": "10452:65:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6060,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6032,
                        "src": "10549:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6061,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6034,
                        "src": "10555:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6062,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6036,
                        "src": "10559:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6059,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6247,
                      "src": "10528:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10528:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6064,
                  "nodeType": "ExpressionStatement",
                  "src": "10528:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10646:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10638:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6066,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10638:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10638:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6070,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6036,
                        "src": "10650:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6065,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6128,
                      "src": "10629:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10629:29:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6072,
                  "nodeType": "ExpressionStatement",
                  "src": "10629:29:16"
                },
                {
                  "expression": {
                    "id": 6077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6073,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "10669:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6075,
                      "indexExpression": {
                        "id": 6074,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6032,
                        "src": "10679:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10669:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 6076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10688:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10669:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6078,
                  "nodeType": "ExpressionStatement",
                  "src": "10669:20:16"
                },
                {
                  "expression": {
                    "id": 6083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6079,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "10699:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6081,
                      "indexExpression": {
                        "id": 6080,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6034,
                        "src": "10709:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10699:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 6082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10716:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10699:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6084,
                  "nodeType": "ExpressionStatement",
                  "src": "10699:18:16"
                },
                {
                  "expression": {
                    "id": 6089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6085,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5424,
                        "src": "10727:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 6087,
                      "indexExpression": {
                        "id": 6086,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6036,
                        "src": "10735:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10727:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6088,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6034,
                      "src": "10746:2:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10727:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6090,
                  "nodeType": "ExpressionStatement",
                  "src": "10727:21:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6092,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6032,
                        "src": "10773:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6093,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6034,
                        "src": "10779:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6094,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6036,
                        "src": "10783:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6091,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "10764:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10764:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6096,
                  "nodeType": "EmitStatement",
                  "src": "10759:32:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6098,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6032,
                        "src": "10822:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6099,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6034,
                        "src": "10828:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6100,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6036,
                        "src": "10832:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6097,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6258,
                      "src": "10802:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10802:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6102,
                  "nodeType": "ExpressionStatement",
                  "src": "10802:38:16"
                }
              ]
            },
            "documentation": {
              "id": 6030,
              "nodeType": "StructuredDocumentation",
              "src": "9924:313:16",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 6104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10251:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6032,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10278:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6104,
                  "src": "10270:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10270:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6034,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10300:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6104,
                  "src": "10292:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10292:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6036,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10320:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6104,
                  "src": "10312:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10312:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10260:73:16"
            },
            "returnParameters": {
              "id": 6038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10351:0:16"
            },
            "scope": 6259,
            "src": "10242:605:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6127,
              "nodeType": "Block",
              "src": "11023:107:16",
              "statements": [
                {
                  "expression": {
                    "id": 6116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6112,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5432,
                        "src": "11033:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 6114,
                      "indexExpression": {
                        "id": 6113,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6109,
                        "src": "11049:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11033:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6115,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6107,
                      "src": "11060:2:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11033:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6117,
                  "nodeType": "ExpressionStatement",
                  "src": "11033:29:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6121,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6109,
                            "src": "11101:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 6119,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6259,
                            "src": "11086:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$6259_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 6120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5538,
                          "src": "11086:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 6122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11086:23:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6123,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6107,
                        "src": "11111:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6124,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6109,
                        "src": "11115:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6118,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "11077:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11077:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6126,
                  "nodeType": "EmitStatement",
                  "src": "11072:51:16"
                }
              ]
            },
            "documentation": {
              "id": 6105,
              "nodeType": "StructuredDocumentation",
              "src": "10853:101:16",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
            },
            "id": 6128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10968:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6107,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10985:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6128,
                  "src": "10977:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10977:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6109,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10997:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6128,
                  "src": "10989:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10989:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10976:29:16"
            },
            "returnParameters": {
              "id": 6111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11023:0:16"
            },
            "scope": 6259,
            "src": "10959:171:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6159,
              "nodeType": "Block",
              "src": "11389:184:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6139,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6131,
                          "src": "11407:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6140,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6133,
                          "src": "11416:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11407:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 6142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11426:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 6138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11399:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11399:55:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6144,
                  "nodeType": "ExpressionStatement",
                  "src": "11399:55:16"
                },
                {
                  "expression": {
                    "id": 6151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6145,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "11464:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 6148,
                        "indexExpression": {
                          "id": 6146,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6131,
                          "src": "11483:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11464:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6149,
                      "indexExpression": {
                        "id": 6147,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6133,
                        "src": "11490:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11464:35:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6150,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6135,
                      "src": "11502:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11464:46:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6152,
                  "nodeType": "ExpressionStatement",
                  "src": "11464:46:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6154,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6131,
                        "src": "11540:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6155,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6133,
                        "src": "11547:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6156,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6135,
                        "src": "11557:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6153,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "11525:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 6157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11525:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6158,
                  "nodeType": "EmitStatement",
                  "src": "11520:46:16"
                }
              ]
            },
            "documentation": {
              "id": 6129,
              "nodeType": "StructuredDocumentation",
              "src": "11136:125:16",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
            },
            "id": 6160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "11275:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6131,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11311:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6160,
                  "src": "11303:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11303:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6133,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11334:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6160,
                  "src": "11326:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11326:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6135,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "11357:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6160,
                  "src": "11352:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6134,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11352:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11293:78:16"
            },
            "returnParameters": {
              "id": 6137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11389:0:16"
            },
            "scope": 6259,
            "src": "11266:307:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6173,
              "nodeType": "Block",
              "src": "11720:70:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6168,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6163,
                            "src": "11746:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6167,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5825,
                          "src": "11738:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 6169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11738:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                        "id": 6170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11756:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        },
                        "value": "ERC721: invalid token ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        }
                      ],
                      "id": 6166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11730:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11730:53:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6172,
                  "nodeType": "ExpressionStatement",
                  "src": "11730:53:16"
                }
              ]
            },
            "documentation": {
              "id": 6161,
              "nodeType": "StructuredDocumentation",
              "src": "11579:73:16",
              "text": " @dev Reverts if the `tokenId` has not been minted yet."
            },
            "id": 6174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireMinted",
            "nameLocation": "11666:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6163,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11689:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6174,
                  "src": "11681:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11681:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11680:17:16"
            },
            "returnParameters": {
              "id": 6165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11720:0:16"
            },
            "scope": 6259,
            "src": "11657:133:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6235,
              "nodeType": "Block",
              "src": "12497:676:16",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 6188,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6179,
                        "src": "12511:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7099,
                      "src": "12511:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 6190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12511:15:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6233,
                    "nodeType": "Block",
                    "src": "13131:36:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 6231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13152:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 6187,
                        "id": 6232,
                        "nodeType": "Return",
                        "src": "13145:11:16"
                      }
                    ]
                  },
                  "id": 6234,
                  "nodeType": "IfStatement",
                  "src": "12507:660:16",
                  "trueBody": {
                    "id": 6230,
                    "nodeType": "Block",
                    "src": "12528:597:16",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 6210,
                              "nodeType": "Block",
                              "src": "12642:91:16",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 6208,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 6204,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6202,
                                      "src": "12667:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 6205,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7081,
                                          "src": "12677:15:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$7081_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 6206,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7080,
                                        "src": "12677:32:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 6207,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12677:41:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12667:51:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 6187,
                                  "id": 6209,
                                  "nodeType": "Return",
                                  "src": "12660:58:16"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 6211,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 6203,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 6202,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12634:6:16",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6211,
                                  "src": "12627:13:16",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 6201,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12627:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12626:15:16"
                            },
                            "src": "12618:115:16"
                          },
                          {
                            "block": {
                              "id": 6227,
                              "nodeType": "Block",
                              "src": "12762:353:16",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 6218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 6215,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6213,
                                        "src": "12784:6:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 6216,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12784:13:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 6217,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12801:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12784:18:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 6225,
                                    "nodeType": "Block",
                                    "src": "12911:190:16",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12997:86:16",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "13034:2:16",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "13038:6:16"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "13030:3:16"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "13030:15:16"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "13053:6:16"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "13047:5:16"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "13047:13:16"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "13023:6:16"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "13023:38:16"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "13023:38:16"
                                            }
                                          ]
                                        },
                                        "documentation": "@solidity memory-safe-assembly",
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 6213,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "13038:6:16",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 6213,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "13053:6:16",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 6224,
                                        "nodeType": "InlineAssembly",
                                        "src": "12988:95:16"
                                      }
                                    ]
                                  },
                                  "id": 6226,
                                  "nodeType": "IfStatement",
                                  "src": "12780:321:16",
                                  "trueBody": {
                                    "id": 6223,
                                    "nodeType": "Block",
                                    "src": "12804:101:16",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 6220,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12833:52:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 6219,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12826:6:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 6221,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12826:60:16",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 6222,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12826:60:16"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 6228,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 6214,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 6213,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12754:6:16",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6228,
                                  "src": "12741:19:16",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 6212,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12741:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12740:21:16"
                            },
                            "src": "12734:381:16"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 6195,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5382,
                                "src": "12583:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 6196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12583:12:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6197,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6177,
                              "src": "12597:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6198,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6181,
                              "src": "12603:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6199,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6183,
                              "src": "12612:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6192,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6179,
                                  "src": "12562:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6191,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7081,
                                "src": "12546:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$7081_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 6193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12546:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$7081",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 6194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7080,
                            "src": "12546:36:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 6200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12546:71:16",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 6229,
                        "nodeType": "TryStatement",
                        "src": "12542:573:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6175,
              "nodeType": "StructuredDocumentation",
              "src": "11796:541:16",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 6236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "12351:22:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6177,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12391:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6236,
                  "src": "12383:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12383:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6179,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12413:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6236,
                  "src": "12405:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12405:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6181,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12433:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6236,
                  "src": "12425:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12425:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6183,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12463:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6236,
                  "src": "12450:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6182,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12450:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12373:100:16"
            },
            "returnParameters": {
              "id": 6187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6236,
                  "src": "12491:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12491:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12490:6:16"
            },
            "scope": 6259,
            "src": "12342:831:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 6246,
              "nodeType": "Block",
              "src": "13849:2:16",
              "statements": []
            },
            "documentation": {
              "id": 6237,
              "nodeType": "StructuredDocumentation",
              "src": "13179:545:16",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 6247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13738:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6239,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13776:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6247,
                  "src": "13768:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13768:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6241,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13798:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6247,
                  "src": "13790:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13790:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6243,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13818:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6247,
                  "src": "13810:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13810:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13758:73:16"
            },
            "returnParameters": {
              "id": 6245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13849:0:16"
            },
            "scope": 6259,
            "src": "13729:122:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6257,
              "nodeType": "Block",
              "src": "14342:2:16",
              "statements": []
            },
            "documentation": {
              "id": 6248,
              "nodeType": "StructuredDocumentation",
              "src": "13857:361:16",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 6258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "14232:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6250,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14269:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "14261:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14261:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6252,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14291:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "14283:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14283:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6254,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14311:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6258,
                  "src": "14303:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14303:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14251:73:16"
            },
            "returnParameters": {
              "id": 6256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14342:0:16"
            },
            "scope": 6259,
            "src": "14223:121:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6260,
        "src": "628:13718:16",
        "usedErrors": []
      }
    ],
    "src": "107:14240:16"
  },
  "bytecode": "",
  "bytecodeSha1": "b0a352420e9f05e18fa1fa53b9bed77ecc4bea64",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "16": {
        "ERC721._checkOnERC721Received": {
          "61": [
            12784,
            12802,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "60": [
            6622,
            6669,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "59": [
            11407,
            11424,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            10369,
            10400,
            true
          ],
          "58": [
            10460,
            10476,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3604,
            3615,
            true
          ],
          "51": [
            3685,
            3706,
            true
          ],
          "52": [
            3710,
            3747,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            5418,
            5459,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            2983,
            3008,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4801,
            4842,
            true
          ]
        }
      },
      "17": {},
      "18": {},
      "20": {},
      "22": {},
      "24": {},
      "26": {
        "Strings.toString": {
          "62": [
            665,
            675,
            false
          ]
        }
      },
      "30": {},
      "31": {}
    },
    "statements": {
      "16": {
        "ERC721._approve": {
          "25": [
            11033,
            11062
          ],
          "26": [
            11072,
            11123
          ]
        },
        "ERC721._baseURI": {
          "21": [
            3394,
            3403
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            12826,
            12886
          ],
          "48": [
            12660,
            12718
          ],
          "49": [
            13145,
            13156
          ]
        },
        "ERC721._exists": {
          "23": [
            7115,
            7152
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "27": [
            7475,
            7571
          ]
        },
        "ERC721._requireMinted": {
          "24": [
            11730,
            11783
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            6576,
            6604
          ],
          "39": [
            6614,
            6724
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            11399,
            11454
          ],
          "36": [
            11464,
            11510
          ],
          "37": [
            11520,
            11566
          ]
        },
        "ERC721._transfer": {
          "28": [
            10361,
            10442
          ],
          "29": [
            10452,
            10517
          ],
          "30": [
            10629,
            10658
          ],
          "31": [
            10669,
            10689
          ],
          "32": [
            10699,
            10717
          ],
          "33": [
            10727,
            10748
          ],
          "34": [
            10759,
            10791
          ]
        },
        "ERC721.approve": {
          "6": [
            3596,
            3653
          ],
          "8": [
            3664,
            3835
          ],
          "9": [
            3846,
            3867
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            2020,
            2093
          ],
          "15": [
            2103,
            2126
          ]
        },
        "ERC721.getApproved": {
          "4": [
            4030,
            4053
          ],
          "5": [
            4064,
            4095
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4501,
            4543
          ]
        },
        "ERC721.name": {
          "3": [
            2549,
            2561
          ]
        },
        "ERC721.ownerOf": {
          "13": [
            2323,
            2379
          ]
        },
        "ERC721.safeTransferFrom": {
          "12": [
            5138,
            5177
          ],
          "18": [
            5410,
            5510
          ],
          "19": [
            5520,
            5558
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            4263,
            4315
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "16": [
            2713,
            2727
          ]
        },
        "ERC721.tokenURI": {
          "20": [
            2898,
            2921
          ],
          "22": [
            2976,
            3069
          ]
        },
        "ERC721.transferFrom": {
          "10": [
            4793,
            4893
          ],
          "11": [
            4904,
            4932
          ]
        }
      },
      "17": {},
      "18": {},
      "20": {},
      "22": {
        "Address.isContract": {
          "46": [
            1458,
            1488
          ]
        }
      },
      "24": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "26": {
        "Strings.toString": {
          "40": [
            691,
            701
          ],
          "41": [
            807,
            815
          ],
          "42": [
            829,
            839
          ],
          "43": [
            941,
            952
          ],
          "44": [
            966,
            1022
          ],
          "45": [
            1036,
            1047
          ]
        }
      },
      "30": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      },
      "31": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.7.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.7.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.2/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.7.2/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.7.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.7.2/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "628:13718:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:44;;558:22;540:41;;528:2;513:18;1570:300:16;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:44;;;1674:51;;1662:2;1647:18;3935:167:16;1528:203:44;3467:407:16;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;:::i;:::-;;:::i;5005:179::-;;;;;;:::i;:::-;;:::i;2190:218::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:44;;;2831:2;2816:18;1929:204:16;2697:177:44;2632:102:16;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5250:315::-;;;;;;:::i;:::-;;:::i;2800:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:16;;-1:-1:-1;;;1707:40:16;;:104;;-1:-1:-1;;;;;;;1763:48:16;;-1:-1:-1;;;1763:48:16;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:30;;;1827:36:16;1688:175;1570:300;-1:-1:-1;;1570:300:16:o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:16;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:16;;3935:167::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;-1:-1:-1;;;;;3604:11:16;:2;-1:-1:-1;;;;;3604:11:16;;3596:57;;;;-1:-1:-1;;;3596:57:16;;5358:2:44;3596:57:16;;;5340:21:44;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:44;;;5480:31;5528:19;;3596:57:16;;;;;;;;;719:10:24;-1:-1:-1;;;;;3685:21:16;;;;:62;;-1:-1:-1;3710:37:16;3727:5;719:10:24;4388:162:16;:::i;3710:37::-;3664:171;;;;-1:-1:-1;;;3664:171:16;;5760:2:44;3664:171:16;;;5742:21:44;5799:2;5779:18;;;5772:30;5838:34;5818:18;;;5811:62;5909:32;5889:18;;;5882:60;5959:19;;3664:171:16;5558:426:44;3664:171:16;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;4612:327::-;4801:41;719:10:24;4834:7:16;4801:18;:41::i;:::-;4793:100;;;;-1:-1:-1;;;4793:100:16;;;;;;;:::i;:::-;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;5005:179::-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;2190:218::-;2262:7;2297:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2297:16:16;;2323:56;;;;-1:-1:-1;;;2323:56:16;;6606:2:44;2323:56:16;;;6588:21:44;6645:2;6625:18;;;6618:30;-1:-1:-1;;;6664:18:44;;;6657:54;6728:18;;2323:56:16;6404:348:44;1929:204:16;2001:7;-1:-1:-1;;;;;2028:19:16;;2020:73;;;;-1:-1:-1;;;2020:73:16;;6959:2:44;2020:73:16;;;6941:21:44;6998:2;6978:18;;;6971:30;7037:34;7017:18;;;7010:62;-1:-1:-1;;;7088:18:44;;;7081:39;7137:19;;2020:73:16;6757:405:44;2020:73:16;-1:-1:-1;;;;;;2110:16:16;;;;;:9;:16;;;;;;;1929:204::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;4169:153::-;4263:52;719:10:24;4296:8:16;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;719:10:24;5451:7:16;5418:18;:41::i;:::-;5410:100;;;;-1:-1:-1;;;5410:100:16;;;;;;;:::i;:::-;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;3394:9;;;;;;;;;-1:-1:-1;3394:9:16;;;3318:92;2956:10;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;2800:276;-1:-1:-1;;;2800:276:16:o;11657:133::-;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:16;11730:53;;;;-1:-1:-1;;;11730:53:16;;6606:2:44;11730:53:16;;;6588:21:44;6645:2;6625:18;;;6618:30;-1:-1:-1;;;6664:18:44;;;6657:54;6728:18;;11730:53:16;6404:348:44;11730:53:16;11657:133;:::o;10959:171::-;11033:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11033:29:16;-1:-1:-1;;;;;11033:29:16;;;;;;;;:24;;11086:23;11033:24;11086:14;:23::i;:::-;-1:-1:-1;;;;;11077:46:16;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;-1:-1:-1;;;;;7483:16:16;:7;-1:-1:-1;;;;;7483:16:16;;:52;;;-1:-1:-1;;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7503:32;7483:87;;;;7563:7;-1:-1:-1;;;;;7539:31:16;:20;7551:7;7539:11;:20::i;:::-;-1:-1:-1;;;;;7539:31:16;;7483:87;7475:96;7317:261;-1:-1:-1;;;;7317:261:16:o;10242:605::-;10396:4;-1:-1:-1;;;;;10369:31:16;:23;10384:7;10369:14;:23::i;:::-;-1:-1:-1;;;;;10369:31:16;;10361:81;;;;-1:-1:-1;;;10361:81:16;;7844:2:44;10361:81:16;;;7826:21:44;7883:2;7863:18;;;7856:30;7922:34;7902:18;;;7895:62;-1:-1:-1;;;7973:18:44;;;7966:35;8018:19;;10361:81:16;7642:401:44;10361:81:16;-1:-1:-1;;;;;10460:16:16;;10452:65;;;;-1:-1:-1;;;10452:65:16;;8250:2:44;10452:65:16;;;8232:21:44;8289:2;8269:18;;;8262:30;8328:34;8308:18;;;8301:62;-1:-1:-1;;;8379:18:44;;;8372:34;8423:19;;10452:65:16;8048:400:44;10452:65:16;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;-1:-1:-1;;;;;10669:15:16;;;;;;:9;:15;;;;;:20;;10688:1;;10669:15;:20;;10688:1;;10669:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10699:13:16;;;;;;:9;:13;;;;;:18;;10716:1;;10699:13;:18;;10716:1;;10699:18;:::i;:::-;;;;-1:-1:-1;;10727:16:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10727:21:16;-1:-1:-1;;;;;10727:21:16;;;;;;;;;10764:27;;10727:16;;10764:27;;;;;;;3537:337;3467:407;;:::o;11266:307::-;11416:8;-1:-1:-1;;;;;11407:17:16;:5;-1:-1:-1;;;;;11407:17:16;;11399:55;;;;-1:-1:-1;;;11399:55:16;;9050:2:44;11399:55:16;;;9032:21:44;9089:2;9069:18;;;9062:30;9128:27;9108:18;;;9101:55;9173:18;;11399:55:16;8848:349:44;11399:55:16;-1:-1:-1;;;;;11464:25:16;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11464:46:16;;;;;;;;;;11525:41;;540::44;;;11525::16;;513:18:44;11525:41:16;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;-1:-1:-1;;;6614:110:16;;;;;;;:::i;392:703:26:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:26;;;;;;;;;;;;-1:-1:-1;;;691:10:26;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:26;;-1:-1:-1;837:2:26;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:26;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:26;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:26;;;;;;;;-1:-1:-1;1036:11:26;1045:2;1036:11;;:::i;:::-;;;908:150;;12342:831:16;12491:4;-1:-1:-1;;;;;12511:13:16;;1465:19:22;:23;12507:660:16;;12546:71;;-1:-1:-1;;;12546:71:16;;-1:-1:-1;;;;;12546:36:16;;;;;:71;;719:10:24;;12597:4:16;;12603:7;;12612:4;;12546:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12546:71:16;;;;;;;;-1:-1:-1;;12546:71:16;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12784:6;:13;12801:1;12784:18;12780:321;;12826:60;;-1:-1:-1;;;12826:60:16;;;;;;;:::i;12780:321::-;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;-1:-1:-1;;;;;;12667:51:16;-1:-1:-1;;;12667:51:16;;-1:-1:-1;12660:58:16;;12507:660;-1:-1:-1;13152:4:16;12342:831;;;;;;:::o;14:131:44:-;-1:-1:-1;;;;;;88:32:44;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:44;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:44;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:44:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:44;;1343:180;-1:-1:-1;1343:180:44:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:44;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:44:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:44;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;5989:410::-;6191:2;6173:21;;;6230:2;6210:18;;;6203:30;6269:34;6264:2;6249:18;;6242:62;-1:-1:-1;;;6335:2:44;6320:18;;6313:44;6389:3;6374:19;;5989:410::o;7167:470::-;7346:3;7384:6;7378:13;7400:53;7446:6;7441:3;7434:4;7426:6;7422:17;7400:53;:::i;:::-;7516:13;;7475:16;;;;7538:57;7516:13;7475:16;7572:4;7560:17;;7538:57;:::i;:::-;7611:20;;7167:470;-1:-1:-1;;;;7167:470:44:o;8453:127::-;8514:10;8509:3;8505:20;8502:1;8495:31;8545:4;8542:1;8535:15;8569:4;8566:1;8559:15;8585:125;8625:4;8653:1;8650;8647:8;8644:34;;;8658:18;;:::i;:::-;-1:-1:-1;8695:9:44;;8585:125::o;8715:128::-;8755:3;8786:1;8782:6;8779:1;8776:13;8773:39;;;8792:18;;:::i;:::-;-1:-1:-1;8828:9:44;;8715:128::o;9202:414::-;9404:2;9386:21;;;9443:2;9423:18;;;9416:30;9482:34;9477:2;9462:18;;9455:62;-1:-1:-1;;;9548:2:44;9533:18;;9526:48;9606:3;9591:19;;9202:414::o;9621:135::-;9660:3;9681:17;;;9678:43;;9701:18;;:::i;:::-;-1:-1:-1;9748:1:44;9737:13;;9621:135::o;9761:127::-;9822:10;9817:3;9813:20;9810:1;9803:31;9853:4;9850:1;9843:15;9877:4;9874:1;9867:15;9893:120;9933:1;9959;9949:35;;9964:18;;:::i;:::-;-1:-1:-1;9998:9:44;;9893:120::o;10018:112::-;10050:1;10076;10066:35;;10081:18;;:::i;:::-;-1:-1:-1;10115:9:44;;10018:112::o;10135:127::-;10196:10;10191:3;10187:20;10184:1;10177:31;10227:4;10224:1;10217:15;10251:4;10248:1;10241:15;10267:489;-1:-1:-1;;;;;10536:15:44;;;10518:34;;10588:15;;10583:2;10568:18;;10561:43;10635:2;10620:18;;10613:34;;;10683:3;10678:2;10663:18;;10656:31;;;10461:4;;10704:46;;10730:19;;10722:6;10704:46;:::i;:::-;10696:54;10267:489;-1:-1:-1;;;;;;10267:489:44:o;10761:249::-;10830:6;10883:2;10871:9;10862:7;10858:23;10854:32;10851:52;;;10899:1;10896;10889:12;10851:52;10931:9;10925:16;10950:30;10974:5;10950:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    628,
    14346
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xEEC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xEEC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x934 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0xA02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x87C PUSH1 0x0 DUP3 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8A5 SWAP1 DUP5 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8D3 SWAP1 DUP5 SWAP1 PUSH2 0xFD0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA0D DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0xA19 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xA5C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xA86 JUMPI DUP1 PUSH2 0xA70 DUP2 PUSH2 0x103A JUMP JUMPDEST SWAP2 POP PUSH2 0xA7F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1069 JUMP JUMPDEST SWAP2 POP PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA1 JUMPI PUSH2 0xAA1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xACB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x790 JUMPI PUSH2 0xAE0 PUSH1 0x1 DUP4 PUSH2 0xFB9 JUMP JUMPDEST SWAP2 POP PUSH2 0xAED PUSH1 0xA DUP7 PUSH2 0x107D JUMP JUMPDEST PUSH2 0xAF8 SWAP1 PUSH1 0x30 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB0D JUMPI PUSH2 0xB0D PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xB2F PUSH1 0xA DUP7 PUSH2 0x1069 JUMP JUMPDEST SWAP5 POP PUSH2 0xACF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB7A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBB5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBB2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x10E4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC12 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC85 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC6D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5CF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCAE DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD26 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD52 DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP3 POP PUSH2 0xD60 PUSH1 0x20 DUP6 ADD PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDFC DUP6 PUSH2 0xCEE JUMP JUMPDEST SWAP4 POP PUSH2 0xE0A PUSH1 0x20 DUP7 ADD PUSH2 0xCEE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE54 JUMPI PUSH2 0xE54 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7C PUSH2 0xDC7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED5 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0xEE3 PUSH1 0x20 DUP5 ADD PUSH2 0xCEE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF00 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF20 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x1C881B9BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xF86 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC6A JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xF9A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC6A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xFCB JUMPI PUSH2 0xFCB PUSH2 0xFA3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFE3 JUMPI PUSH2 0xFE3 PUSH2 0xFA3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x104C JUMPI PUSH2 0x104C PUSH2 0xFA3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1078 JUMPI PUSH2 0x1078 PUSH2 0x1053 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x108C JUMPI PUSH2 0x108C PUSH2 0x1053 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10DA SWAP1 DUP4 ADD DUP5 PUSH2 0xC96 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC37 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SWAP9 SWAP10 CALLCODE 0xEA SWAP9 DUP5 0xD7 EXTCODESIZE 0xD4 0x5E DELEGATECALL DUP9 LT 0x2E PUSH16 0x3FD2C550807F4396F43B425BA85FF21D PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "GT",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "98": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "101": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "REVERT",
      "path": "16"
    },
    "102": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "104": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "114": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "115": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "121": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "132": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "136": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "139": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "REVERT",
      "path": "16"
    },
    "140": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "142": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "148": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "153": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "163": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "164": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "170": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "174": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "175": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "181": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "185": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "186": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "192": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "196": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "EQ",
      "path": "16"
    },
    "203": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "207": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "208": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "DUP1",
      "path": "16"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        628,
        14346
      ],
      "op": "REVERT",
      "path": "16"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC4D"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "16"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "16"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "16"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "16"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "16"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "16"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCC2"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "16"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCD5"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "16"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "16"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD0A"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "16"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x333"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "16"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "STOP",
      "path": "16"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD34"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMP",
      "path": "16"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44D"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMP",
      "path": "16"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD34"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMP",
      "path": "16"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47E"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMP",
      "path": "16"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCD5"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMP",
      "path": "16"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x499"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMP",
      "path": "16"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD70"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F9"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57F"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMP",
      "path": "16"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD8B"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "16"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x58E"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "16"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDDD"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "16"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x59D"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "16"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCD5"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2800,
        3076
      ],
      "op": "JUMP",
      "path": "16"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D5"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2800,
        3076
      ],
      "op": "JUMP",
      "path": "16"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEB9"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "16"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "16"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "16"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "16"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "16"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "16"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "16"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "16"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP3",
      "path": "16"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "16"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "16"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "16"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "16"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "16"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "16"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "16"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "16"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "16"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "30",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "30"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "30"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "16"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2524,
        2537
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2556,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEEC"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "16"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DIV",
      "path": "16"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MUL",
      "path": "16"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "16"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEEC"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "16"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "LT",
      "path": "16"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "16"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DIV",
      "path": "16"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MUL",
      "path": "16"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "16"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "16"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "16"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "16"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "GT",
      "path": "16"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "16"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SUB",
      "path": "16"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "AND",
      "path": "16"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "16"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "16"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "16"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "16"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "16"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "16"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "16"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "16"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "16"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4011,
        4018
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0x317"
    },
    "786": {
      "fn": "ERC721.getApproved",
      "offset": [
        4045,
        4052
      ],
      "op": "DUP3",
      "path": "16"
    },
    "787": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x649"
    },
    "790": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMP",
      "path": "16"
    },
    "791": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 5,
      "value": "0x0"
    },
    "795": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "796": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "DUP2",
      "path": "16"
    },
    "797": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "798": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4086
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "800": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "802": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "803": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "806": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "807": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "op": "SUB"
    },
    "816": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "AND",
      "path": "16"
    },
    "817": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "818": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "16"
    },
    "819": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "820": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3560
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "822": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33E"
    },
    "825": {
      "fn": "ERC721.approve",
      "offset": [
        3578,
        3585
      ],
      "op": "DUP3",
      "path": "16"
    },
    "826": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3577
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x499"
    },
    "829": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3563,
        3586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "830": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "831": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "832": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3586
      ],
      "op": "POP",
      "path": "16"
    },
    "833": {
      "fn": "ERC721.approve",
      "offset": [
        3610,
        3615
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 6
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "op": "SUB"
    },
    "842": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "AND",
      "path": "16"
    },
    "843": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3606
      ],
      "op": "DUP4",
      "path": "16"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "AND",
      "path": "16"
    },
    "853": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "SUB",
      "path": "16"
    },
    "854": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B0"
    },
    "857": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "858": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP2",
      "path": "16"
    },
    "869": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "872": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP3",
      "path": "16"
    },
    "875": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "ADD",
      "path": "16"
    },
    "876": {
      "op": "MSTORE"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "881": {
      "op": "DUP3"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "MSTORE"
    },
    "884": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "919": {
      "op": "DUP3"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "929": {
      "op": "DUP3"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "936": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "939": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP1",
      "path": "16"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SUB",
      "path": "16"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "16"
    },
    "944": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "945": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 7
    },
    "946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "952": {
      "op": "SHL"
    },
    "953": {
      "op": "SUB"
    },
    "954": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 8
    },
    "955": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "AND",
      "path": "16"
    },
    "956": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "EQ",
      "path": "16"
    },
    "957": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "DUP1",
      "path": "16"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3CC"
    },
    "961": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3747
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "fn": "ERC721.approve",
      "offset": [
        3710,
        3747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3CC"
    },
    "966": {
      "fn": "ERC721.approve",
      "offset": [
        3727,
        3732
      ],
      "op": "DUP2",
      "path": "16"
    },
    "967": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "24"
    },
    "968": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FA"
    },
    "971": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "16"
    },
    "972": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3710,
        3747
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "973": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x43E"
    },
    "976": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "977": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "979": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "986": {
      "op": "SHL"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "DUP2",
      "path": "16"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "993": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "DUP3",
      "path": "16"
    },
    "994": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "ADD",
      "path": "16"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1000": {
      "op": "DUP3"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1038": {
      "op": "DUP3"
    },
    "1039": {
      "op": "ADD"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "op": "PUSH32",
      "value": "0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "op": "MSTORE"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "1085": {
      "op": "JUMP"
    },
    "1086": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 9,
      "value": "0x448"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3857
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        3859,
        3866
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3854
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6AB"
    },
    "1095": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3874
      ],
      "op": "POP",
      "path": "16"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "16"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "16"
    },
    "1100": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1101": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1102": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 10,
      "value": "0x457"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "24"
    },
    "1106": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1107": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4819
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x719"
    },
    "1110": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1111": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1112": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x473"
    },
    "1115": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1116": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1118": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1127": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1128": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1130": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "ADD",
      "path": "16"
    },
    "1131": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "1134": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1135": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF26"
    },
    "1138": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1139": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1140": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4904,
        4932
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 11,
      "value": "0x448"
    },
    "1143": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4914,
        4918
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1144": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4920,
        4922
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1145": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4924,
        4931
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1146": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4904,
        4913
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x798"
    },
    "1149": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4904,
        4932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1150": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1151": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 12,
      "value": "0x448"
    },
    "1154": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5155,
        5159
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1155": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5161,
        5163
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1156": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5165,
        5172
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1157": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1159": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1160": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1161": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1163": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "ADD",
      "path": "16"
    },
    "1164": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1166": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1167": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1168": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1170": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1171": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1172": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "POP",
      "path": "16"
    },
    "1173": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5154
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x59D"
    },
    "1176": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5138,
        5177
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1177": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1178": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2262,
        2269
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1180": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1181": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1182": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1183": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2304
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1185": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1187": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1188": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1190": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1191": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1192": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "SUB"
    },
    "1201": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "AND",
      "path": "16"
    },
    "1202": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1203": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 13,
      "value": "0x274"
    },
    "1206": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1207": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1209": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1218": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1221": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1224": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "ADD",
      "path": "16"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "ADD"
    },
    "1232": {
      "op": "MSTORE"
    },
    "1233": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1263": {
      "op": "DUP3"
    },
    "1264": {
      "op": "ADD"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "1272": {
      "op": "JUMP"
    },
    "1273": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1274": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "op": "SUB"
    },
    "1284": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 14
    },
    "1285": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "16"
    },
    "1286": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x563"
    },
    "1289": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1290": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1292": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1301": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1304": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1306": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1307": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "ADD",
      "path": "16"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1313": {
      "op": "DUP3"
    },
    "1314": {
      "op": "ADD"
    },
    "1315": {
      "op": "MSTORE"
    },
    "1316": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1351": {
      "op": "DUP3"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1369": {
      "op": "DUP3"
    },
    "1370": {
      "op": "ADD"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1374": {
      "op": "ADD"
    },
    "1375": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "1378": {
      "op": "JUMP"
    },
    "1379": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "AND",
      "path": "16",
      "statement": 15
    },
    "1390": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1393": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2119
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1397": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1400": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1403": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1405": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1406": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1407": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1408": {
      "fn": "ERC721.symbol",
      "offset": [
        2688,
        2701
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1410": {
      "fn": "ERC721.symbol",
      "offset": [
        2720,
        2727
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 16,
      "value": "0x1"
    },
    "1412": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1413": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1414": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x289"
    },
    "1417": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1418": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEEC"
    },
    "1421": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2713,
        2727
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1422": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1423": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 17,
      "value": "0x599"
    },
    "1426": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "24"
    },
    "1427": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4296,
        4304
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1428": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4306,
        4314
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1429": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4281
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x934"
    },
    "1432": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1433": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1434": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "16"
    },
    "1435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "16"
    },
    "1436": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1437": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1438": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5459
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 18,
      "value": "0x5A7"
    },
    "1441": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "24"
    },
    "1442": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5451,
        5458
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1443": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5436
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x719"
    },
    "1446": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5418,
        5459
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1447": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5459
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C3"
    },
    "1451": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1452": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1463": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1466": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "ADD",
      "path": "16"
    },
    "1467": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "1470": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1471": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF26"
    },
    "1474": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1475": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5558
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 19,
      "value": "0x5CF"
    },
    "1479": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5534,
        5538
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1480": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5540,
        5542
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1481": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5544,
        5551
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1482": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5553,
        5557
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5533
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA02"
    },
    "1486": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5520,
        5558
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1487": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5558
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1488": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "16"
    },
    "1489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "16"
    },
    "1490": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "16"
    },
    "1491": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "16"
    },
    "1492": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1493": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1494": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2873,
        2886
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1496": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2898,
        2921
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 20,
      "value": "0x5E0"
    },
    "1499": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2913,
        2920
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1500": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x649"
    },
    "1503": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2898,
        2921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1504": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2898,
        2921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1505": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2932,
        2953
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1507": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2956,
        2966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F7"
    },
    "1510": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x40"
    },
    "1512": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1513": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1514": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1517": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "ADD",
      "path": "16"
    },
    "1518": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1519": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1520": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1524": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1525": {
      "fn": "ERC721._baseURI",
      "offset": [
        3394,
        3403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1526": {
      "fn": "ERC721._baseURI",
      "offset": [
        3318,
        3410
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1527": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2956,
        2966
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1528": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2932,
        2966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1529": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2932,
        2966
      ],
      "op": "POP",
      "path": "16"
    },
    "1530": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3007,
        3008
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0x0"
    },
    "1532": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2989,
        2996
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1533": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3004
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1534": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3008
      ],
      "op": "GT",
      "path": "16"
    },
    "1535": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x617"
    },
    "1538": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1539": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1541": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1542": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1543": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1545": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "ADD",
      "path": "16"
    },
    "1546": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1548": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1549": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1550": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1552": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1553": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1554": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "POP",
      "path": "16"
    },
    "1555": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x642"
    },
    "1558": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1559": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3035,
        3042
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1561": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3044,
        3062
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x621"
    },
    "1564": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3044,
        3051
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3044,
        3060
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA35"
    },
    "1568": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3044,
        3062
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1569": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3044,
        3062
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1570": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1572": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1573": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "ADD",
      "path": "16"
    },
    "1576": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x632"
    },
    "1579": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1580": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1581": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1582": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF74"
    },
    "1585": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3018,
        3063
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1587": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1590": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1593": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1594": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "SUB",
      "path": "16"
    },
    "1595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "SUB",
      "path": "16"
    },
    "1596": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1597": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1598": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1599": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1601": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3063
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2983,
        3069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1603": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2976,
        3069
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2800,
        3076
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "op": "POP"
    },
    "1608": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2800,
        3076
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1609": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11657,
        11790
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1610": {
      "fn": "ERC721._exists",
      "offset": [
        7099,
        7103
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1612": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 23
    },
    "1613": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1614": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1615": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7129
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1617": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1619": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1620": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1622": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1623": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1624": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "op": "SUB"
    },
    "1633": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "AND",
      "path": "16"
    },
    "1634": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 24,
      "value": "0x6A8"
    },
    "1637": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1638": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1640": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1647": {
      "op": "SHL"
    },
    "1648": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1649": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1652": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1654": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1655": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "ADD",
      "path": "16"
    },
    "1656": {
      "op": "MSTORE"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1661": {
      "op": "DUP3"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1694": {
      "op": "DUP3"
    },
    "1695": {
      "op": "ADD"
    },
    "1696": {
      "op": "MSTORE"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "1703": {
      "op": "JUMP"
    },
    "1704": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1705": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11657,
        11790
      ],
      "op": "POP",
      "path": "16"
    },
    "1706": {
      "fn": "ERC721._requireMinted",
      "jump": "o",
      "offset": [
        11657,
        11790
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1707": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1708": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 25,
      "value": "0x0"
    },
    "1710": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1711": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1712": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1713": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11048
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1715": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1717": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1718": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1720": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1721": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1722": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1723": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1730": {
      "op": "SHL"
    },
    "1731": {
      "op": "SUB"
    },
    "1732": {
      "op": "NOT"
    },
    "1733": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "AND",
      "path": "16"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1743": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "AND",
      "path": "16"
    },
    "1744": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1745": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1746": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "OR",
      "path": "16"
    },
    "1747": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1748": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1749": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1750": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1751": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1752": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11109
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 26,
      "value": "0x6E0"
    },
    "1755": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1756": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11100
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x499"
    },
    "1759": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11086,
        11109
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1760": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11109
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1767": {
      "op": "SHL"
    },
    "1768": {
      "op": "SUB"
    },
    "1769": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "AND",
      "path": "16"
    },
    "1770": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1803": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1805": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1806": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1808": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1809": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1810": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1811": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SUB",
      "path": "16"
    },
    "1812": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1813": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "LOG4",
      "path": "16"
    },
    "1814": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "POP",
      "path": "16"
    },
    "1815": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "POP",
      "path": "16"
    },
    "1816": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10959,
        11130
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1817": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7317,
        7578
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1818": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7410,
        7414
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1820": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7439
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1821": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7465
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x725"
    },
    "1824": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7457,
        7464
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1825": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7456
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x499"
    },
    "1828": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7442,
        7465
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1829": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7465
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1830": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7465
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1831": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7465
      ],
      "op": "POP",
      "path": "16"
    },
    "1832": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7494,
        7499
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 27
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "AND",
      "path": "16"
    },
    "1842": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7490
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "AND",
      "path": "16"
    },
    "1852": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "EQ",
      "path": "16"
    },
    "1853": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1854": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x76C"
    },
    "1857": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1868": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1869": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "16"
    },
    "1870": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1873": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1874": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1875": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "1877": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1879": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1880": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1881": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1882": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1884": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1885": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1886": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1887": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1888": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP9",
      "path": "16"
    },
    "1889": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "16"
    },
    "1890": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1891": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1892": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1893": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1894": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1895": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1896": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1897": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1899": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "16"
    },
    "1900": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7503,
        7535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1901": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1902": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x790"
    },
    "1905": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1906": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "POP",
      "path": "16"
    },
    "1907": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7563,
        7570
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "op": "SUB"
    },
    "1916": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "AND",
      "path": "16"
    },
    "1917": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x785"
    },
    "1920": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7558
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1921": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C"
    },
    "1924": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7539,
        7559
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1925": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7559
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "SUB"
    },
    "1934": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "AND",
      "path": "16"
    },
    "1935": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "EQ",
      "path": "16"
    },
    "1936": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1937": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7475,
        7571
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1938": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7317,
        7578
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1939": {
      "op": "POP"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "op": "POP"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7317,
        7578
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1944": {
      "fn": "ERC721._transfer",
      "offset": [
        10242,
        10847
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1945": {
      "fn": "ERC721._transfer",
      "offset": [
        10396,
        10400
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 28
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "AND",
      "path": "16"
    },
    "1955": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10392
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7AB"
    },
    "1958": {
      "fn": "ERC721._transfer",
      "offset": [
        10384,
        10391
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1959": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10383
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x499"
    },
    "1962": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10369,
        10392
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1963": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10392
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "AND",
      "path": "16"
    },
    "1973": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "EQ",
      "path": "16"
    },
    "1974": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x80F"
    },
    "1977": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1978": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1980": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1981": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1989": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1992": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1994": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1995": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "ADD",
      "path": "16"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2039": {
      "op": "DUP3"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "op": "MSTORE"
    },
    "2042": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2053": {
      "op": "DUP3"
    },
    "2054": {
      "op": "ADD"
    },
    "2055": {
      "op": "MSTORE"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2058": {
      "op": "ADD"
    },
    "2059": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "2062": {
      "op": "JUMP"
    },
    "2063": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2070": {
      "op": "SHL"
    },
    "2071": {
      "op": "SUB"
    },
    "2072": {
      "fn": "ERC721._transfer",
      "offset": [
        10460,
        10476
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 29
    },
    "2073": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10460,
        10476
      ],
      "op": "AND",
      "path": "16"
    },
    "2074": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x871"
    },
    "2077": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2078": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2080": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2089": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2092": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2094": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2095": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "ADD",
      "path": "16"
    },
    "2096": {
      "op": "MSTORE"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2099": {
      "op": "DUP1"
    },
    "2100": {
      "op": "DUP3"
    },
    "2101": {
      "op": "ADD"
    },
    "2102": {
      "op": "MSTORE"
    },
    "2103": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2138": {
      "op": "DUP3"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "MSTORE"
    },
    "2141": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2151": {
      "op": "DUP3"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "op": "MSTORE"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "2160": {
      "op": "JUMP"
    },
    "2161": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2162": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10658
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 30,
      "value": "0x87C"
    },
    "2165": {
      "fn": "ERC721._transfer",
      "offset": [
        10646,
        10647
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2167": {
      "fn": "ERC721._transfer",
      "offset": [
        10650,
        10657
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2168": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10637
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6AB"
    },
    "2171": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10629,
        10658
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2172": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10658
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2179": {
      "op": "SHL"
    },
    "2180": {
      "op": "SUB"
    },
    "2181": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 31
    },
    "2182": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "AND",
      "path": "16"
    },
    "2183": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2185": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2186": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2187": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2188": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2190": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2192": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2193": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2195": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2196": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2197": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2198": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2199": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2201": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2202": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2203": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A5"
    },
    "2206": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2207": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2208": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2209": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFB9"
    },
    "2212": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10669,
        10689
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2213": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2214": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2215": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2216": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "op": "POP"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 32
    },
    "2228": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "AND",
      "path": "16"
    },
    "2229": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2232": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2233": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2234": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2236": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2238": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2239": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2241": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2242": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2243": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2244": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2245": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2248": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2249": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8D3"
    },
    "2252": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2253": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2254": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2255": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD0"
    },
    "2258": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10699,
        10717
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2259": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2260": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2262": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "op": "POP"
    },
    "2265": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 33,
      "value": "0x0"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2268": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2269": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2270": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10734
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "2272": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2274": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2275": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2277": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2278": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2279": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2280": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2281": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "op": "NOT"
    },
    "2291": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "AND",
      "path": "16"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "op": "SUB"
    },
    "2300": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2301": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2302": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "AND",
      "path": "16"
    },
    "2303": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2304": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2305": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "OR",
      "path": "16"
    },
    "2306": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2307": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2308": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2309": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 34
    },
    "2310": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2311": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2312": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2313": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2314": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2315": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "AND",
      "path": "16"
    },
    "2316": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2317": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2350": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2351": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "LOG4",
      "path": "16"
    },
    "2352": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3874
      ],
      "op": "POP",
      "path": "16"
    },
    "2353": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "16"
    },
    "2354": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "16"
    },
    "2355": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2356": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2357": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11416,
        11424
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 35
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "op": "SUB"
    },
    "2366": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "AND",
      "path": "16"
    },
    "2367": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11412
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "op": "SUB"
    },
    "2376": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "AND",
      "path": "16"
    },
    "2377": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "SUB",
      "path": "16"
    },
    "2378": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x995"
    },
    "2381": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2382": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2384": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2391": {
      "op": "SHL"
    },
    "2392": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2393": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2396": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2398": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2399": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "ADD",
      "path": "16"
    },
    "2400": {
      "op": "MSTORE"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2405": {
      "op": "DUP3"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "2452": {
      "op": "JUMP"
    },
    "2453": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "op": "SUB"
    },
    "2462": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 36
    },
    "2463": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2464": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "AND",
      "path": "16"
    },
    "2465": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2467": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2468": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2469": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2470": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "2472": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2474": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2475": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2476": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2477": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2479": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2480": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2481": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2482": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "2483": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2484": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "AND",
      "path": "16"
    },
    "2485": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2486": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2487": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2488": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "2489": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2490": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2491": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2492": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2493": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2494": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2495": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2496": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2499": {
      "op": "NOT"
    },
    "2500": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "AND",
      "path": "16"
    },
    "2501": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2502": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2503": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2504": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2505": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2506": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "OR",
      "path": "16"
    },
    "2507": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2508": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2509": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2510": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 37
    },
    "2511": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2512": {
      "op": "SWAP2"
    },
    "2513": {
      "op": "DUP3"
    },
    "2514": {
      "op": "MSTORE"
    },
    "2515": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2548": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2552": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2553": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2554": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2555": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SUB",
      "path": "16"
    },
    "2556": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2557": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "LOG3",
      "path": "16"
    },
    "2558": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "16"
    },
    "2559": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "16"
    },
    "2560": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "16"
    },
    "2561": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11266,
        11573
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2562": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6426,
        6731
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2563": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6604
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 38,
      "value": "0xA0D"
    },
    "2566": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6586,
        6590
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2567": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6592,
        6594
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2568": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6596,
        6603
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2569": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x798"
    },
    "2572": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6576,
        6604
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2573": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6604
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2574": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6669
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 39,
      "value": "0xA19"
    },
    "2577": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6645,
        6649
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2578": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6651,
        6653
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2579": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6655,
        6662
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2580": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6664,
        6668
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2581": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6644
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB36"
    },
    "2584": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6622,
        6669
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2585": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6669
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2586": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CF"
    },
    "2589": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2590": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2592": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2599": {
      "op": "SHL"
    },
    "2600": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2601": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2602": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2604": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "ADD",
      "path": "16"
    },
    "2605": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "2608": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2609": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE8"
    },
    "2612": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6614,
        6724
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2613": {
      "fn": "Strings.toString",
      "offset": [
        392,
        1095
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2614": {
      "fn": "Strings.toString",
      "offset": [
        448,
        461
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2616": {
      "fn": "Strings.toString",
      "offset": [
        665,
        670
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2617": {
      "fn": "Strings.toString",
      "offset": [
        674,
        675
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2619": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        665,
        675
      ],
      "op": "SUB",
      "path": "26"
    },
    "2620": {
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA5C"
    },
    "2623": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "POP"
    },
    "2626": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 40,
      "value": "0x40"
    },
    "2628": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2629": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2630": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2631": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2632": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "ADD",
      "path": "26"
    },
    "2633": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2634": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2635": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2636": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2638": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2639": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2644": {
      "op": "SHL"
    },
    "2645": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2647": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2648": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "ADD",
      "path": "26"
    },
    "2649": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2650": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2651": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        392,
        1095
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2652": {
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2653": {
      "fn": "Strings.toString",
      "offset": [
        736,
        741
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2654": {
      "fn": "Strings.toString",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2656": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2657": {
      "fn": "Strings.toString",
      "offset": [
        782,
        791
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2658": {
      "fn": "Strings.toString",
      "offset": [
        782,
        791
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2659": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA86"
    },
    "2662": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2663": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 41
    },
    "2664": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA70"
    },
    "2667": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2668": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x103A"
    },
    "2671": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        807,
        815
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2672": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2673": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 42,
      "value": "0xA7F"
    },
    "2678": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2679": {
      "op": "POP"
    },
    "2680": {
      "fn": "Strings.toString",
      "offset": [
        837,
        839
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "2682": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2683": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1069"
    },
    "2686": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        829,
        839
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2687": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2688": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2689": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "POP",
      "path": "26"
    },
    "2690": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA60"
    },
    "2693": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2694": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2695": {
      "fn": "Strings.toString",
      "offset": [
        859,
        878
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2697": {
      "fn": "Strings.toString",
      "offset": [
        891,
        897
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2698": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH8",
      "path": "26",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2707": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2708": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "GT",
      "path": "26"
    },
    "2709": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2710": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAA1"
    },
    "2713": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2714": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAA1"
    },
    "2717": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDC7"
    },
    "2720": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        881,
        898
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2721": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2722": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2724": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2725": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2726": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2727": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2728": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2729": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2730": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2732": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "26"
    },
    "2733": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2735": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "NOT",
      "path": "26"
    },
    "2736": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "AND",
      "path": "26"
    },
    "2737": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2739": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "26"
    },
    "2740": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2741": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "26"
    },
    "2742": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2744": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2745": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2746": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2747": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xACB"
    },
    "2750": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2751": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2753": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2754": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "26"
    },
    "2755": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2756": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2757": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "2758": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2759": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "2760": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "26"
    },
    "2761": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2762": {
      "op": "POP"
    },
    "2763": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2764": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "POP",
      "path": "26"
    },
    "2765": {
      "fn": "Strings.toString",
      "offset": [
        859,
        898
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2766": {
      "fn": "Strings.toString",
      "offset": [
        859,
        898
      ],
      "op": "POP",
      "path": "26"
    },
    "2767": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2768": {
      "fn": "Strings.toString",
      "offset": [
        915,
        925
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2769": {
      "fn": "Strings.toString",
      "offset": [
        915,
        925
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2770": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x790"
    },
    "2773": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2774": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 43,
      "value": "0xAE0"
    },
    "2777": {
      "fn": "Strings.toString",
      "offset": [
        951,
        952
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2779": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2780": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFB9"
    },
    "2783": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        941,
        952
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2784": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2785": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 44,
      "value": "0xAED"
    },
    "2790": {
      "fn": "Strings.toString",
      "offset": [
        1017,
        1019
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "2792": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1014
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2793": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x107D"
    },
    "2796": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        1009,
        1019
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2797": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2798": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAF8"
    },
    "2801": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2802": {
      "fn": "Strings.toString",
      "offset": [
        996,
        998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x30"
    },
    "2804": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFD0"
    },
    "2807": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        996,
        1020
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2808": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2809": {
      "fn": "Strings.toString",
      "offset": [
        983,
        1022
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xF8"
    },
    "2811": {
      "fn": "Strings.toString",
      "offset": [
        983,
        1022
      ],
      "op": "SHL",
      "path": "26"
    },
    "2812": {
      "fn": "Strings.toString",
      "offset": [
        966,
        972
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2813": {
      "fn": "Strings.toString",
      "offset": [
        973,
        979
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2814": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2815": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2816": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2817": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "LT",
      "path": "26"
    },
    "2818": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB0D"
    },
    "2821": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2822": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB0D"
    },
    "2825": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1091"
    },
    "2828": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        966,
        980
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2829": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2830": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2832": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "ADD",
      "path": "26"
    },
    "2833": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "ADD",
      "path": "26"
    },
    "2834": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "op": "SUB"
    },
    "2843": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "NOT",
      "path": "26"
    },
    "2844": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "AND",
      "path": "26"
    },
    "2845": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2846": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2847": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2849": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "BYTE",
      "path": "26"
    },
    "2850": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2851": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "MSTORE8",
      "path": "26"
    },
    "2852": {
      "op": "POP"
    },
    "2853": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 45,
      "value": "0xB2F"
    },
    "2856": {
      "fn": "Strings.toString",
      "offset": [
        1045,
        1047
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "2858": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2859": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1069"
    },
    "2862": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        1036,
        1047
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2863": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2864": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "2865": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "POP",
      "path": "26"
    },
    "2866": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xACF"
    },
    "2869": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12491,
        12495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2879": {
      "op": "SHL"
    },
    "2880": {
      "op": "SUB"
    },
    "2881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12511,
        12524
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12511,
        12524
      ],
      "op": "AND",
      "path": "16"
    },
    "2883": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "22",
      "statement": 46
    },
    "2884": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC2C"
    },
    "2888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2891": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2892": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2899": {
      "op": "SHL"
    },
    "2900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "op": "SUB"
    },
    "2910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "AND",
      "path": "16"
    },
    "2912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x150B7A02"
    },
    "2918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "2922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2923": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2924": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12601
      ],
      "op": "DUP10",
      "path": "16"
    },
    "2926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12601
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12603,
        12610
      ],
      "op": "DUP9",
      "path": "16"
    },
    "2928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12603,
        12610
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12612,
        12616
      ],
      "op": "DUP9",
      "path": "16"
    },
    "2930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12612,
        12616
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "16"
    },
    "2934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10A7"
    },
    "2937": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SUB",
      "path": "16"
    },
    "2947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "GAS",
      "path": "16"
    },
    "2952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "CALL",
      "path": "16"
    },
    "2953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "16"
    },
    "2955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "16"
    },
    "2956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "16"
    },
    "2957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB5"
    },
    "2962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2963": {
      "op": "POP"
    },
    "2964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2966": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "16"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2976": {
      "op": "NOT"
    },
    "2977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "AND",
      "path": "16"
    },
    "2978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "16"
    },
    "2980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB2"
    },
    "2986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "16"
    },
    "2989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10E4"
    },
    "2993": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "3001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBE3"
    },
    "3009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3014": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "16"
    },
    "3015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "NOT",
      "path": "16"
    },
    "3018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "3020": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3021": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "16"
    },
    "3022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "AND",
      "path": "16"
    },
    "3023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "16"
    },
    "3025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3037": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "16"
    },
    "3038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBE8"
    },
    "3042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "3046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "16"
    },
    "3048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "16"
    },
    "3050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12790
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12797
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12801,
        12802
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3054": {
      "branch": 61,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12802
      ],
      "op": "SUB",
      "path": "16"
    },
    "3055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC0A"
    },
    "3058": {
      "branch": 61,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 47,
      "value": "0x40"
    },
    "3061": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3062": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3068": {
      "op": "SHL"
    },
    "3069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "ADD",
      "path": "16"
    },
    "3074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "3077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE8"
    },
    "3081": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12826,
        12886
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13053,
        13059
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13047,
        13060
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3085": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13038,
        13044
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13034,
        13036
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13030,
        13045
      ],
      "op": "ADD",
      "path": "16"
    },
    "3089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13023,
        13061
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3090": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3097": {
      "op": "SHL"
    },
    "3098": {
      "op": "SUB"
    },
    "3099": {
      "op": "NOT"
    },
    "3100": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "AND",
      "path": "16",
      "statement": 48
    },
    "3101": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3108": {
      "op": "SHL"
    },
    "3109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "EQ",
      "path": "16"
    },
    "3110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3111": {
      "op": "POP"
    },
    "3112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12660,
        12718
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x790"
    },
    "3115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12660,
        12718
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3117": {
      "op": "POP"
    },
    "3118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13152,
        13156
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 49,
      "value": "0x1"
    },
    "3120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "3121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "16"
    },
    "3123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "16"
    },
    "3124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "16"
    },
    "3125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "16"
    },
    "3126": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12342,
        13173
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3127": {
      "op": "JUMPDEST"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3134": {
      "op": "SHL"
    },
    "3135": {
      "op": "SUB"
    },
    "3136": {
      "op": "NOT"
    },
    "3137": {
      "op": "DUP2"
    },
    "3138": {
      "op": "AND"
    },
    "3139": {
      "op": "DUP2"
    },
    "3140": {
      "op": "EQ"
    },
    "3141": {
      "op": "PUSH2",
      "value": "0x6A8"
    },
    "3144": {
      "op": "JUMPI"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3147": {
      "op": "DUP1"
    },
    "3148": {
      "op": "REVERT"
    },
    "3149": {
      "op": "JUMPDEST"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3154": {
      "op": "DUP3"
    },
    "3155": {
      "op": "DUP5"
    },
    "3156": {
      "op": "SUB"
    },
    "3157": {
      "op": "SLT"
    },
    "3158": {
      "op": "ISZERO"
    },
    "3159": {
      "op": "PUSH2",
      "value": "0xC5F"
    },
    "3162": {
      "op": "JUMPI"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3165": {
      "op": "DUP1"
    },
    "3166": {
      "op": "REVERT"
    },
    "3167": {
      "op": "JUMPDEST"
    },
    "3168": {
      "op": "DUP2"
    },
    "3169": {
      "op": "CALLDATALOAD"
    },
    "3170": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3173": {
      "op": "DUP2"
    },
    "3174": {
      "op": "PUSH2",
      "value": "0xC37"
    },
    "3177": {
      "jump": "i",
      "op": "JUMP"
    },
    "3178": {
      "op": "JUMPDEST"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3181": {
      "op": "JUMPDEST"
    },
    "3182": {
      "op": "DUP4"
    },
    "3183": {
      "op": "DUP2"
    },
    "3184": {
      "op": "LT"
    },
    "3185": {
      "op": "ISZERO"
    },
    "3186": {
      "op": "PUSH2",
      "value": "0xC85"
    },
    "3189": {
      "op": "JUMPI"
    },
    "3190": {
      "op": "DUP2"
    },
    "3191": {
      "op": "DUP2"
    },
    "3192": {
      "op": "ADD"
    },
    "3193": {
      "op": "MLOAD"
    },
    "3194": {
      "op": "DUP4"
    },
    "3195": {
      "op": "DUP3"
    },
    "3196": {
      "op": "ADD"
    },
    "3197": {
      "op": "MSTORE"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "PUSH2",
      "value": "0xC6D"
    },
    "3204": {
      "op": "JUMP"
    },
    "3205": {
      "op": "JUMPDEST"
    },
    "3206": {
      "op": "DUP4"
    },
    "3207": {
      "op": "DUP2"
    },
    "3208": {
      "op": "GT"
    },
    "3209": {
      "op": "ISZERO"
    },
    "3210": {
      "op": "PUSH2",
      "value": "0x5CF"
    },
    "3213": {
      "op": "JUMPI"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "op": "POP"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3218": {
      "op": "SWAP2"
    },
    "3219": {
      "op": "ADD"
    },
    "3220": {
      "op": "MSTORE"
    },
    "3221": {
      "jump": "o",
      "op": "JUMP"
    },
    "3222": {
      "op": "JUMPDEST"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3225": {
      "op": "DUP2"
    },
    "3226": {
      "op": "MLOAD"
    },
    "3227": {
      "op": "DUP1"
    },
    "3228": {
      "op": "DUP5"
    },
    "3229": {
      "op": "MSTORE"
    },
    "3230": {
      "op": "PUSH2",
      "value": "0xCAE"
    },
    "3233": {
      "op": "DUP2"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3236": {
      "op": "DUP7"
    },
    "3237": {
      "op": "ADD"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3240": {
      "op": "DUP7"
    },
    "3241": {
      "op": "ADD"
    },
    "3242": {
      "op": "PUSH2",
      "value": "0xC6A"
    },
    "3245": {
      "jump": "i",
      "op": "JUMP"
    },
    "3246": {
      "op": "JUMPDEST"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3249": {
      "op": "ADD"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3252": {
      "op": "NOT"
    },
    "3253": {
      "op": "AND"
    },
    "3254": {
      "op": "SWAP3"
    },
    "3255": {
      "op": "SWAP1"
    },
    "3256": {
      "op": "SWAP3"
    },
    "3257": {
      "op": "ADD"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3260": {
      "op": "ADD"
    },
    "3261": {
      "op": "SWAP3"
    },
    "3262": {
      "op": "SWAP2"
    },
    "3263": {
      "op": "POP"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "jump": "o",
      "op": "JUMP"
    },
    "3266": {
      "op": "JUMPDEST"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3269": {
      "op": "DUP2"
    },
    "3270": {
      "op": "MSTORE"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3273": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3278": {
      "op": "DUP4"
    },
    "3279": {
      "op": "ADD"
    },
    "3280": {
      "op": "DUP5"
    },
    "3281": {
      "op": "PUSH2",
      "value": "0xC96"
    },
    "3284": {
      "jump": "i",
      "op": "JUMP"
    },
    "3285": {
      "op": "JUMPDEST"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3290": {
      "op": "DUP3"
    },
    "3291": {
      "op": "DUP5"
    },
    "3292": {
      "op": "SUB"
    },
    "3293": {
      "op": "SLT"
    },
    "3294": {
      "op": "ISZERO"
    },
    "3295": {
      "op": "PUSH2",
      "value": "0xCE7"
    },
    "3298": {
      "op": "JUMPI"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3301": {
      "op": "DUP1"
    },
    "3302": {
      "op": "REVERT"
    },
    "3303": {
      "op": "JUMPDEST"
    },
    "3304": {
      "op": "POP"
    },
    "3305": {
      "op": "CALLDATALOAD"
    },
    "3306": {
      "op": "SWAP2"
    },
    "3307": {
      "op": "SWAP1"
    },
    "3308": {
      "op": "POP"
    },
    "3309": {
      "jump": "o",
      "op": "JUMP"
    },
    "3310": {
      "op": "JUMPDEST"
    },
    "3311": {
      "op": "DUP1"
    },
    "3312": {
      "op": "CALLDATALOAD"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "SUB"
    },
    "3321": {
      "op": "DUP2"
    },
    "3322": {
      "op": "AND"
    },
    "3323": {
      "op": "DUP2"
    },
    "3324": {
      "op": "EQ"
    },
    "3325": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3328": {
      "op": "JUMPI"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3331": {
      "op": "DUP1"
    },
    "3332": {
      "op": "REVERT"
    },
    "3333": {
      "op": "JUMPDEST"
    },
    "3334": {
      "op": "SWAP2"
    },
    "3335": {
      "op": "SWAP1"
    },
    "3336": {
      "op": "POP"
    },
    "3337": {
      "jump": "o",
      "op": "JUMP"
    },
    "3338": {
      "op": "JUMPDEST"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3341": {
      "op": "DUP1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3344": {
      "op": "DUP4"
    },
    "3345": {
      "op": "DUP6"
    },
    "3346": {
      "op": "SUB"
    },
    "3347": {
      "op": "SLT"
    },
    "3348": {
      "op": "ISZERO"
    },
    "3349": {
      "op": "PUSH2",
      "value": "0xD1D"
    },
    "3352": {
      "op": "JUMPI"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3355": {
      "op": "DUP1"
    },
    "3356": {
      "op": "REVERT"
    },
    "3357": {
      "op": "JUMPDEST"
    },
    "3358": {
      "op": "PUSH2",
      "value": "0xD26"
    },
    "3361": {
      "op": "DUP4"
    },
    "3362": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3365": {
      "jump": "i",
      "op": "JUMP"
    },
    "3366": {
      "op": "JUMPDEST"
    },
    "3367": {
      "op": "SWAP5"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3370": {
      "op": "SWAP4"
    },
    "3371": {
      "op": "SWAP1"
    },
    "3372": {
      "op": "SWAP4"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "op": "CALLDATALOAD"
    },
    "3375": {
      "op": "SWAP4"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "jump": "o",
      "op": "JUMP"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3383": {
      "op": "DUP1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3388": {
      "op": "DUP5"
    },
    "3389": {
      "op": "DUP7"
    },
    "3390": {
      "op": "SUB"
    },
    "3391": {
      "op": "SLT"
    },
    "3392": {
      "op": "ISZERO"
    },
    "3393": {
      "op": "PUSH2",
      "value": "0xD49"
    },
    "3396": {
      "op": "JUMPI"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3399": {
      "op": "DUP1"
    },
    "3400": {
      "op": "REVERT"
    },
    "3401": {
      "op": "JUMPDEST"
    },
    "3402": {
      "op": "PUSH2",
      "value": "0xD52"
    },
    "3405": {
      "op": "DUP5"
    },
    "3406": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3409": {
      "jump": "i",
      "op": "JUMP"
    },
    "3410": {
      "op": "JUMPDEST"
    },
    "3411": {
      "op": "SWAP3"
    },
    "3412": {
      "op": "POP"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xD60"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3418": {
      "op": "DUP6"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3423": {
      "jump": "i",
      "op": "JUMP"
    },
    "3424": {
      "op": "JUMPDEST"
    },
    "3425": {
      "op": "SWAP2"
    },
    "3426": {
      "op": "POP"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3429": {
      "op": "DUP5"
    },
    "3430": {
      "op": "ADD"
    },
    "3431": {
      "op": "CALLDATALOAD"
    },
    "3432": {
      "op": "SWAP1"
    },
    "3433": {
      "op": "POP"
    },
    "3434": {
      "op": "SWAP3"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "op": "SWAP3"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "op": "SWAP3"
    },
    "3439": {
      "jump": "o",
      "op": "JUMP"
    },
    "3440": {
      "op": "JUMPDEST"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3445": {
      "op": "DUP3"
    },
    "3446": {
      "op": "DUP5"
    },
    "3447": {
      "op": "SUB"
    },
    "3448": {
      "op": "SLT"
    },
    "3449": {
      "op": "ISZERO"
    },
    "3450": {
      "op": "PUSH2",
      "value": "0xD82"
    },
    "3453": {
      "op": "JUMPI"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3456": {
      "op": "DUP1"
    },
    "3457": {
      "op": "REVERT"
    },
    "3458": {
      "op": "JUMPDEST"
    },
    "3459": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3462": {
      "op": "DUP3"
    },
    "3463": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3466": {
      "jump": "i",
      "op": "JUMP"
    },
    "3467": {
      "op": "JUMPDEST"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3470": {
      "op": "DUP1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3473": {
      "op": "DUP4"
    },
    "3474": {
      "op": "DUP6"
    },
    "3475": {
      "op": "SUB"
    },
    "3476": {
      "op": "SLT"
    },
    "3477": {
      "op": "ISZERO"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD9E"
    },
    "3481": {
      "op": "JUMPI"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3484": {
      "op": "DUP1"
    },
    "3485": {
      "op": "REVERT"
    },
    "3486": {
      "op": "JUMPDEST"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0xDA7"
    },
    "3490": {
      "op": "DUP4"
    },
    "3491": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3494": {
      "jump": "i",
      "op": "JUMP"
    },
    "3495": {
      "op": "JUMPDEST"
    },
    "3496": {
      "op": "SWAP2"
    },
    "3497": {
      "op": "POP"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3500": {
      "op": "DUP4"
    },
    "3501": {
      "op": "ADD"
    },
    "3502": {
      "op": "CALLDATALOAD"
    },
    "3503": {
      "op": "DUP1"
    },
    "3504": {
      "op": "ISZERO"
    },
    "3505": {
      "op": "ISZERO"
    },
    "3506": {
      "op": "DUP2"
    },
    "3507": {
      "op": "EQ"
    },
    "3508": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "3511": {
      "op": "JUMPI"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3514": {
      "op": "DUP1"
    },
    "3515": {
      "op": "REVERT"
    },
    "3516": {
      "op": "JUMPDEST"
    },
    "3517": {
      "op": "DUP1"
    },
    "3518": {
      "op": "SWAP2"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "op": "POP"
    },
    "3521": {
      "op": "SWAP3"
    },
    "3522": {
      "op": "POP"
    },
    "3523": {
      "op": "SWAP3"
    },
    "3524": {
      "op": "SWAP1"
    },
    "3525": {
      "op": "POP"
    },
    "3526": {
      "jump": "o",
      "op": "JUMP"
    },
    "3527": {
      "op": "JUMPDEST"
    },
    "3528": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3535": {
      "op": "SHL"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3538": {
      "op": "MSTORE"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3543": {
      "op": "MSTORE"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3548": {
      "op": "REVERT"
    },
    "3549": {
      "op": "JUMPDEST"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3552": {
      "op": "DUP1"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3555": {
      "op": "DUP1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3558": {
      "op": "DUP6"
    },
    "3559": {
      "op": "DUP8"
    },
    "3560": {
      "op": "SUB"
    },
    "3561": {
      "op": "SLT"
    },
    "3562": {
      "op": "ISZERO"
    },
    "3563": {
      "op": "PUSH2",
      "value": "0xDF3"
    },
    "3566": {
      "op": "JUMPI"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3569": {
      "op": "DUP1"
    },
    "3570": {
      "op": "REVERT"
    },
    "3571": {
      "op": "JUMPDEST"
    },
    "3572": {
      "op": "PUSH2",
      "value": "0xDFC"
    },
    "3575": {
      "op": "DUP6"
    },
    "3576": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3579": {
      "jump": "i",
      "op": "JUMP"
    },
    "3580": {
      "op": "JUMPDEST"
    },
    "3581": {
      "op": "SWAP4"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "op": "PUSH2",
      "value": "0xE0A"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3588": {
      "op": "DUP7"
    },
    "3589": {
      "op": "ADD"
    },
    "3590": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3593": {
      "jump": "i",
      "op": "JUMP"
    },
    "3594": {
      "op": "JUMPDEST"
    },
    "3595": {
      "op": "SWAP3"
    },
    "3596": {
      "op": "POP"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3599": {
      "op": "DUP6"
    },
    "3600": {
      "op": "ADD"
    },
    "3601": {
      "op": "CALLDATALOAD"
    },
    "3602": {
      "op": "SWAP2"
    },
    "3603": {
      "op": "POP"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3606": {
      "op": "DUP6"
    },
    "3607": {
      "op": "ADD"
    },
    "3608": {
      "op": "CALLDATALOAD"
    },
    "3609": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3618": {
      "op": "DUP1"
    },
    "3619": {
      "op": "DUP3"
    },
    "3620": {
      "op": "GT"
    },
    "3621": {
      "op": "ISZERO"
    },
    "3622": {
      "op": "PUSH2",
      "value": "0xE2E"
    },
    "3625": {
      "op": "JUMPI"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3628": {
      "op": "DUP1"
    },
    "3629": {
      "op": "REVERT"
    },
    "3630": {
      "op": "JUMPDEST"
    },
    "3631": {
      "op": "DUP2"
    },
    "3632": {
      "op": "DUP8"
    },
    "3633": {
      "op": "ADD"
    },
    "3634": {
      "op": "SWAP2"
    },
    "3635": {
      "op": "POP"
    },
    "3636": {
      "op": "DUP8"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3639": {
      "op": "DUP4"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "op": "SLT"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE42"
    },
    "3645": {
      "op": "JUMPI"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3648": {
      "op": "DUP1"
    },
    "3649": {
      "op": "REVERT"
    },
    "3650": {
      "op": "JUMPDEST"
    },
    "3651": {
      "op": "DUP2"
    },
    "3652": {
      "op": "CALLDATALOAD"
    },
    "3653": {
      "op": "DUP2"
    },
    "3654": {
      "op": "DUP2"
    },
    "3655": {
      "op": "GT"
    },
    "3656": {
      "op": "ISZERO"
    },
    "3657": {
      "op": "PUSH2",
      "value": "0xE54"
    },
    "3660": {
      "op": "JUMPI"
    },
    "3661": {
      "op": "PUSH2",
      "value": "0xE54"
    },
    "3664": {
      "op": "PUSH2",
      "value": "0xDC7"
    },
    "3667": {
      "jump": "i",
      "op": "JUMP"
    },
    "3668": {
      "op": "JUMPDEST"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3671": {
      "op": "MLOAD"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3674": {
      "op": "DUP3"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3678": {
      "op": "NOT"
    },
    "3679": {
      "op": "SWAP1"
    },
    "3680": {
      "op": "DUP2"
    },
    "3681": {
      "op": "AND"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "op": "AND"
    },
    "3686": {
      "op": "DUP2"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "SWAP1"
    },
    "3689": {
      "op": "DUP4"
    },
    "3690": {
      "op": "DUP3"
    },
    "3691": {
      "op": "GT"
    },
    "3692": {
      "op": "DUP2"
    },
    "3693": {
      "op": "DUP4"
    },
    "3694": {
      "op": "LT"
    },
    "3695": {
      "op": "OR"
    },
    "3696": {
      "op": "ISZERO"
    },
    "3697": {
      "op": "PUSH2",
      "value": "0xE7C"
    },
    "3700": {
      "op": "JUMPI"
    },
    "3701": {
      "op": "PUSH2",
      "value": "0xE7C"
    },
    "3704": {
      "op": "PUSH2",
      "value": "0xDC7"
    },
    "3707": {
      "jump": "i",
      "op": "JUMP"
    },
    "3708": {
      "op": "JUMPDEST"
    },
    "3709": {
      "op": "DUP2"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3712": {
      "op": "MSTORE"
    },
    "3713": {
      "op": "DUP3"
    },
    "3714": {
      "op": "DUP2"
    },
    "3715": {
      "op": "MSTORE"
    },
    "3716": {
      "op": "DUP11"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3719": {
      "op": "DUP5"
    },
    "3720": {
      "op": "DUP8"
    },
    "3721": {
      "op": "ADD"
    },
    "3722": {
      "op": "ADD"
    },
    "3723": {
      "op": "GT"
    },
    "3724": {
      "op": "ISZERO"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0xE95"
    },
    "3728": {
      "op": "JUMPI"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3731": {
      "op": "DUP1"
    },
    "3732": {
      "op": "REVERT"
    },
    "3733": {
      "op": "JUMPDEST"
    },
    "3734": {
      "op": "DUP3"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3737": {
      "op": "DUP7"
    },
    "3738": {
      "op": "ADD"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3741": {
      "op": "DUP4"
    },
    "3742": {
      "op": "ADD"
    },
    "3743": {
      "op": "CALLDATACOPY"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3748": {
      "op": "DUP5"
    },
    "3749": {
      "op": "DUP4"
    },
    "3750": {
      "op": "ADD"
    },
    "3751": {
      "op": "ADD"
    },
    "3752": {
      "op": "MSTORE"
    },
    "3753": {
      "op": "DUP1"
    },
    "3754": {
      "op": "SWAP6"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "op": "POP"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "op": "POP"
    },
    "3761": {
      "op": "SWAP3"
    },
    "3762": {
      "op": "SWAP6"
    },
    "3763": {
      "op": "SWAP2"
    },
    "3764": {
      "op": "SWAP5"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "op": "SWAP3"
    },
    "3767": {
      "op": "POP"
    },
    "3768": {
      "jump": "o",
      "op": "JUMP"
    },
    "3769": {
      "op": "JUMPDEST"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3772": {
      "op": "DUP1"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3775": {
      "op": "DUP4"
    },
    "3776": {
      "op": "DUP6"
    },
    "3777": {
      "op": "SUB"
    },
    "3778": {
      "op": "SLT"
    },
    "3779": {
      "op": "ISZERO"
    },
    "3780": {
      "op": "PUSH2",
      "value": "0xECC"
    },
    "3783": {
      "op": "JUMPI"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3786": {
      "op": "DUP1"
    },
    "3787": {
      "op": "REVERT"
    },
    "3788": {
      "op": "JUMPDEST"
    },
    "3789": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "3792": {
      "op": "DUP4"
    },
    "3793": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3796": {
      "jump": "i",
      "op": "JUMP"
    },
    "3797": {
      "op": "JUMPDEST"
    },
    "3798": {
      "op": "SWAP2"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "op": "PUSH2",
      "value": "0xEE3"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3805": {
      "op": "DUP5"
    },
    "3806": {
      "op": "ADD"
    },
    "3807": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3810": {
      "jump": "i",
      "op": "JUMP"
    },
    "3811": {
      "op": "JUMPDEST"
    },
    "3812": {
      "op": "SWAP1"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "op": "SWAP3"
    },
    "3815": {
      "op": "POP"
    },
    "3816": {
      "op": "SWAP3"
    },
    "3817": {
      "op": "SWAP1"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "jump": "o",
      "op": "JUMP"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3823": {
      "op": "DUP2"
    },
    "3824": {
      "op": "DUP2"
    },
    "3825": {
      "op": "SHR"
    },
    "3826": {
      "op": "SWAP1"
    },
    "3827": {
      "op": "DUP3"
    },
    "3828": {
      "op": "AND"
    },
    "3829": {
      "op": "DUP1"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xF00"
    },
    "3833": {
      "op": "JUMPI"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3836": {
      "op": "DUP3"
    },
    "3837": {
      "op": "AND"
    },
    "3838": {
      "op": "SWAP2"
    },
    "3839": {
      "op": "POP"
    },
    "3840": {
      "op": "JUMPDEST"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3843": {
      "op": "DUP3"
    },
    "3844": {
      "op": "LT"
    },
    "3845": {
      "op": "DUP2"
    },
    "3846": {
      "op": "SUB"
    },
    "3847": {
      "op": "PUSH2",
      "value": "0xF20"
    },
    "3850": {
      "op": "JUMPI"
    },
    "3851": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3858": {
      "op": "SHL"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3861": {
      "op": "MSTORE"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3866": {
      "op": "MSTORE"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3871": {
      "op": "REVERT"
    },
    "3872": {
      "op": "JUMPDEST"
    },
    "3873": {
      "op": "POP"
    },
    "3874": {
      "op": "SWAP2"
    },
    "3875": {
      "op": "SWAP1"
    },
    "3876": {
      "op": "POP"
    },
    "3877": {
      "jump": "o",
      "op": "JUMP"
    },
    "3878": {
      "op": "JUMPDEST"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3881": {
      "op": "DUP1"
    },
    "3882": {
      "op": "DUP3"
    },
    "3883": {
      "op": "MSTORE"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3886": {
      "op": "SWAP1"
    },
    "3887": {
      "op": "DUP3"
    },
    "3888": {
      "op": "ADD"
    },
    "3889": {
      "op": "MSTORE"
    },
    "3890": {
      "op": "PUSH32",
      "value": "0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3925": {
      "op": "DUP3"
    },
    "3926": {
      "op": "ADD"
    },
    "3927": {
      "op": "MSTORE"
    },
    "3928": {
      "op": "PUSH14",
      "value": "0x1C881B9BDC88185C1C1C9BDD9959"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3945": {
      "op": "SHL"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3948": {
      "op": "DUP3"
    },
    "3949": {
      "op": "ADD"
    },
    "3950": {
      "op": "MSTORE"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3953": {
      "op": "ADD"
    },
    "3954": {
      "op": "SWAP1"
    },
    "3955": {
      "jump": "o",
      "op": "JUMP"
    },
    "3956": {
      "op": "JUMPDEST"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3959": {
      "op": "DUP4"
    },
    "3960": {
      "op": "MLOAD"
    },
    "3961": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "3964": {
      "op": "DUP2"
    },
    "3965": {
      "op": "DUP5"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3968": {
      "op": "DUP9"
    },
    "3969": {
      "op": "ADD"
    },
    "3970": {
      "op": "PUSH2",
      "value": "0xC6A"
    },
    "3973": {
      "jump": "i",
      "op": "JUMP"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "DUP4"
    },
    "3976": {
      "op": "MLOAD"
    },
    "3977": {
      "op": "SWAP1"
    },
    "3978": {
      "op": "DUP4"
    },
    "3979": {
      "op": "ADD"
    },
    "3980": {
      "op": "SWAP1"
    },
    "3981": {
      "op": "PUSH2",
      "value": "0xF9A"
    },
    "3984": {
      "op": "DUP2"
    },
    "3985": {
      "op": "DUP4"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3988": {
      "op": "DUP9"
    },
    "3989": {
      "op": "ADD"
    },
    "3990": {
      "op": "PUSH2",
      "value": "0xC6A"
    },
    "3993": {
      "jump": "i",
      "op": "JUMP"
    },
    "3994": {
      "op": "JUMPDEST"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "SWAP5"
    },
    "3997": {
      "op": "SWAP4"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "op": "POP"
    },
    "4000": {
      "op": "POP"
    },
    "4001": {
      "op": "POP"
    },
    "4002": {
      "jump": "o",
      "op": "JUMP"
    },
    "4003": {
      "op": "JUMPDEST"
    },
    "4004": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4011": {
      "op": "SHL"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4014": {
      "op": "MSTORE"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4019": {
      "op": "MSTORE"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4024": {
      "op": "REVERT"
    },
    "4025": {
      "op": "JUMPDEST"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4028": {
      "op": "DUP3"
    },
    "4029": {
      "op": "DUP3"
    },
    "4030": {
      "op": "LT"
    },
    "4031": {
      "op": "ISZERO"
    },
    "4032": {
      "op": "PUSH2",
      "value": "0xFCB"
    },
    "4035": {
      "op": "JUMPI"
    },
    "4036": {
      "op": "PUSH2",
      "value": "0xFCB"
    },
    "4039": {
      "op": "PUSH2",
      "value": "0xFA3"
    },
    "4042": {
      "jump": "i",
      "op": "JUMP"
    },
    "4043": {
      "op": "JUMPDEST"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "op": "SUB"
    },
    "4046": {
      "op": "SWAP1"
    },
    "4047": {
      "jump": "o",
      "op": "JUMP"
    },
    "4048": {
      "op": "JUMPDEST"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4051": {
      "op": "DUP3"
    },
    "4052": {
      "op": "NOT"
    },
    "4053": {
      "op": "DUP3"
    },
    "4054": {
      "op": "GT"
    },
    "4055": {
      "op": "ISZERO"
    },
    "4056": {
      "op": "PUSH2",
      "value": "0xFE3"
    },
    "4059": {
      "op": "JUMPI"
    },
    "4060": {
      "op": "PUSH2",
      "value": "0xFE3"
    },
    "4063": {
      "op": "PUSH2",
      "value": "0xFA3"
    },
    "4066": {
      "jump": "i",
      "op": "JUMP"
    },
    "4067": {
      "op": "JUMPDEST"
    },
    "4068": {
      "op": "POP"
    },
    "4069": {
      "op": "ADD"
    },
    "4070": {
      "op": "SWAP1"
    },
    "4071": {
      "jump": "o",
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4075": {
      "op": "DUP1"
    },
    "4076": {
      "op": "DUP3"
    },
    "4077": {
      "op": "MSTORE"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4080": {
      "op": "SWAP1"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "ADD"
    },
    "4083": {
      "op": "MSTORE"
    },
    "4084": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4119": {
      "op": "DUP3"
    },
    "4120": {
      "op": "ADD"
    },
    "4121": {
      "op": "MSTORE"
    },
    "4122": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4143": {
      "op": "SHL"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4146": {
      "op": "DUP3"
    },
    "4147": {
      "op": "ADD"
    },
    "4148": {
      "op": "MSTORE"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4151": {
      "op": "ADD"
    },
    "4152": {
      "op": "SWAP1"
    },
    "4153": {
      "jump": "o",
      "op": "JUMP"
    },
    "4154": {
      "op": "JUMPDEST"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4159": {
      "op": "DUP3"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "PUSH2",
      "value": "0x104C"
    },
    "4164": {
      "op": "JUMPI"
    },
    "4165": {
      "op": "PUSH2",
      "value": "0x104C"
    },
    "4168": {
      "op": "PUSH2",
      "value": "0xFA3"
    },
    "4171": {
      "jump": "i",
      "op": "JUMP"
    },
    "4172": {
      "op": "JUMPDEST"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4176": {
      "op": "ADD"
    },
    "4177": {
      "op": "SWAP1"
    },
    "4178": {
      "jump": "o",
      "op": "JUMP"
    },
    "4179": {
      "op": "JUMPDEST"
    },
    "4180": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4187": {
      "op": "SHL"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4195": {
      "op": "MSTORE"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4200": {
      "op": "REVERT"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4204": {
      "op": "DUP3"
    },
    "4205": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4208": {
      "op": "JUMPI"
    },
    "4209": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4212": {
      "op": "PUSH2",
      "value": "0x1053"
    },
    "4215": {
      "jump": "i",
      "op": "JUMP"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "op": "POP"
    },
    "4218": {
      "op": "DIV"
    },
    "4219": {
      "op": "SWAP1"
    },
    "4220": {
      "jump": "o",
      "op": "JUMP"
    },
    "4221": {
      "op": "JUMPDEST"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4224": {
      "op": "DUP3"
    },
    "4225": {
      "op": "PUSH2",
      "value": "0x108C"
    },
    "4228": {
      "op": "JUMPI"
    },
    "4229": {
      "op": "PUSH2",
      "value": "0x108C"
    },
    "4232": {
      "op": "PUSH2",
      "value": "0x1053"
    },
    "4235": {
      "jump": "i",
      "op": "JUMP"
    },
    "4236": {
      "op": "JUMPDEST"
    },
    "4237": {
      "op": "POP"
    },
    "4238": {
      "op": "MOD"
    },
    "4239": {
      "op": "SWAP1"
    },
    "4240": {
      "jump": "o",
      "op": "JUMP"
    },
    "4241": {
      "op": "JUMPDEST"
    },
    "4242": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4249": {
      "op": "SHL"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4252": {
      "op": "MSTORE"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4262": {
      "op": "REVERT"
    },
    "4263": {
      "op": "JUMPDEST"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4270": {
      "op": "SHL"
    },
    "4271": {
      "op": "SUB"
    },
    "4272": {
      "op": "DUP6"
    },
    "4273": {
      "op": "DUP2"
    },
    "4274": {
      "op": "AND"
    },
    "4275": {
      "op": "DUP3"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "DUP5"
    },
    "4278": {
      "op": "AND"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4281": {
      "op": "DUP3"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4286": {
      "op": "DUP2"
    },
    "4287": {
      "op": "ADD"
    },
    "4288": {
      "op": "DUP4"
    },
    "4289": {
      "op": "SWAP1"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4295": {
      "op": "DUP3"
    },
    "4296": {
      "op": "ADD"
    },
    "4297": {
      "op": "DUP2"
    },
    "4298": {
      "op": "SWAP1"
    },
    "4299": {
      "op": "MSTORE"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4302": {
      "op": "SWAP1"
    },
    "4303": {
      "op": "PUSH2",
      "value": "0x10DA"
    },
    "4306": {
      "op": "SWAP1"
    },
    "4307": {
      "op": "DUP4"
    },
    "4308": {
      "op": "ADD"
    },
    "4309": {
      "op": "DUP5"
    },
    "4310": {
      "op": "PUSH2",
      "value": "0xC96"
    },
    "4313": {
      "jump": "i",
      "op": "JUMP"
    },
    "4314": {
      "op": "JUMPDEST"
    },
    "4315": {
      "op": "SWAP7"
    },
    "4316": {
      "op": "SWAP6"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "op": "POP"
    },
    "4319": {
      "op": "POP"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "jump": "o",
      "op": "JUMP"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4329": {
      "op": "DUP3"
    },
    "4330": {
      "op": "DUP5"
    },
    "4331": {
      "op": "SUB"
    },
    "4332": {
      "op": "SLT"
    },
    "4333": {
      "op": "ISZERO"
    },
    "4334": {
      "op": "PUSH2",
      "value": "0x10F6"
    },
    "4337": {
      "op": "JUMPI"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4340": {
      "op": "DUP1"
    },
    "4341": {
      "op": "REVERT"
    },
    "4342": {
      "op": "JUMPDEST"
    },
    "4343": {
      "op": "DUP2"
    },
    "4344": {
      "op": "MLOAD"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "4348": {
      "op": "DUP2"
    },
    "4349": {
      "op": "PUSH2",
      "value": "0xC37"
    },
    "4352": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "176c437a3504e5ce44866ed2fb1312dea872890f",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "628:13718:16:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:16;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:13718;;14:127:44;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:44;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:44;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:44:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:44;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:44;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:44;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:44;;;4037:26;3988:89;-1:-1:-1;;2792:1:44;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:44;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:44;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:44;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:44:o;:::-;628:13718:16;;;;;;",
  "sourcePath": "/home/crome/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.2/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}